[% META title = 'Proxmox Dashboard' %]
[% PageVersion = '/proxmox/index.tt,v 0.02.01 2025/03/30 shanta Exp shanta ' %]
[% IF debug == 1 -%]
    [% PageVersion %]
[% END -%]
our page version     [% PageVersion %]
[% INCLUDE 'proxmox/virtual_machine_data_fetch.tt' %]

<script>
    // Fetch virtual machine data
    fetchVirtualMachineData('[% c.uri_for('/proxmox/virtual_machines') %]')
        .then(response => response.json())
        .then(data => initializeVirtualMachineTable(data.virtual_machines));
</script>

<div class="container">
    <h1>Proxmox VE Dashboard 546546</h1>

    [% IF notifications.size > 0 %]
    <div class="notifications">
        <ul>
            [% FOREACH notification IN notifications %]
                <li>[% notification %]</li>
            [% END %]
        </ul>
    </div>
    [% END %]
    <div class="virtual-machine-list-panel">
        <h2>Virtual Machines</h2>

        <div id="virtual-machine-table-container">
        <table class="virtual-machine-table">
            <thead>
                <tr>
                    <th>Virtual Machine ID</th>
                    <th>Name</th>
                    <th>Status</th>
                    <th>Memory</th>
                    <th>CPU</th>
                    <th>Uptime</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="virtual-machine-table-body">
            </tbody>
        </table>
        </div>
        <div class="no-virtual-machines">
            [% IF !virtual_machines || virtual_machines.size == 0 %]
            <p>No virtual machines found.</p>
            <p>Click "Create New Virtual Machine" to get started.</p>
            [% END %]
        </div>
    </div>

    [% IF debug_info %]
        <div class="debug-info">
            <h3>Debug Information</h3>
            <pre>[% JSON.dump(debug_info) %]</pre>
        </div>
    [% END %]
</div>

<script>
// Function to initialize the virtual machine table
function initializeVirtualMachineTable(virtualMachines) {
    const tableBody = document.getElementById('virtual-machine-table-body');
    tableBody.innerHTML = '';

    virtualMachines.forEach(vm => {
        const row = document.createElement('tr');

        const idCell = document.createElement('td');
        idCell.textContent = vm.virtual_machine_id;
        row.appendChild(idCell);

        const nameCell = document.createElement('td');
        nameCell.textContent = vm.name;
        row.appendChild(nameCell);

        const statusCell = document.createElement('td');
        statusCell.classList.add('status', vm.status);
        statusCell.textContent = vm.status;
        row.appendChild(statusCell);

        // Add more cells for memory, CPU, uptime, and actions

        tableBody.appendChild(row);
    });
}
</script>

<style>
.container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
    font-family: Arial, sans-serif;
    background-color: #f9f9f9;
}
</style>

<script>
// Helper function to format uptime
function formatUptime(seconds) {
    if (!seconds) return 'Not running';

    const days = Math.floor(seconds / (86400));
    const hours = Math.floor((seconds % 86400) / 3600);
    const minutes = Math.floor((seconds % 3600) / 60);

    let result = '';
    if (days > 0) result += days + ' days, ';
    if (hours > 0 || days > 0) result += hours + ' hours, ';
    result += minutes + ' minutes';

    return result;
}

// Function to refresh virtual machine list
function refreshVirtualMachineList() { window.location.reload(); }
</script>
