.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.0102 (Pod::Simple 3.45)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Test::Moose 3"
.TH Test::Moose 3 2025-07-04 "perl v5.40.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Test::Moose \- Test functions for Moose specific features
.SH VERSION
.IX Header "VERSION"
version 2.4000
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 2
\&  use Test::More plan => 1;
\&  use Test::Moose;
\&
\&  meta_ok($class_or_obj, "... Foo has a \->meta");
\&  does_ok($class_or_obj, $role, "... Foo does the Baz role");
\&  has_attribute_ok($class_or_obj, $attr_name, "... Foo has the \*(Aqbar\*(Aq attribute");
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This module provides some useful test functions for Moose based classes. It
is an experimental first release, so comments and suggestions are very welcome.
.SH "EXPORTED FUNCTIONS"
.IX Header "EXPORTED FUNCTIONS"
.SS "meta_ok ($class_or_object)"
.IX Subsection "meta_ok ($class_or_object)"
Tests if a class or object has a metaclass.
.ie n .SS "does_ok ($class_or_object, $role, ?$message)"
.el .SS "does_ok ($class_or_object, \f(CW$role\fP, ?$message)"
.IX Subsection "does_ok ($class_or_object, $role, ?$message)"
Tests if a class or object does a certain role, similar to what \f(CW\*(C`isa_ok\*(C'\fR
does for the \f(CW\*(C`isa\*(C'\fR method.
.ie n .SS "has_attribute_ok($class_or_object, $attr_name, ?$message)"
.el .SS "has_attribute_ok($class_or_object, \f(CW$attr_name\fP, ?$message)"
.IX Subsection "has_attribute_ok($class_or_object, $attr_name, ?$message)"
Tests if a class or object has a certain attribute, similar to what \f(CW\*(C`can_ok\*(C'\fR
does for the methods.
.ie n .SS "with_immutable { CODE } @class_names"
.el .SS "with_immutable { CODE } \f(CW@class_names\fP"
.IX Subsection "with_immutable { CODE } @class_names"
Runs \fBCODE\fR (which should contain normal tests) twice, and make each
class in \f(CW@class_names\fR immutable in between the two runs.
.PP
The \fBCODE\fR block is called with a single boolean argument indicating whether
or not the classes have been made immutable yet.
.SH TODO
.IX Header "TODO"
.IP "Convert the Moose test suite to use this module." 4
.IX Item "Convert the Moose test suite to use this module."
.PD 0
.IP "Here is a list of possible functions to write" 4
.IX Item "Here is a list of possible functions to write"
.RS 4
.IP "immutability predicates" 4
.IX Item "immutability predicates"
.IP "anon-class predicates" 4
.IX Item "anon-class predicates"
.IP "discovering original method from modified method" 4
.IX Item "discovering original method from modified method"
.IP "attribute metaclass predicates (attribute_isa?)" 4
.IX Item "attribute metaclass predicates (attribute_isa?)"
.RE
.RS 4
.RE
.PD
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.IP Test::More 4
.IX Item "Test::More"
.SH BUGS
.IX Header "BUGS"
See "BUGS" in Moose for details on reporting bugs.
.SH AUTHORS
.IX Header "AUTHORS"
.IP \(bu 4
Stevan Little <stevan@cpan.org>
.IP \(bu 4
Dave Rolsky <autarch@urth.org>
.IP \(bu 4
Jesse Luehrs <doy@cpan.org>
.IP \(bu 4
Shawn M Moore <sartak@cpan.org>
.IP \(bu 4
יובל קוג'מן (Yuval Kogman) <nothingmuch@woobling.org>
.IP \(bu 4
Karen Etheridge <ether@cpan.org>
.IP \(bu 4
Florian Ragwitz <rafl@debian.org>
.IP \(bu 4
Hans Dieter Pearcey <hdp@cpan.org>
.IP \(bu 4
Chris Prather <chris@prather.org>
.IP \(bu 4
Matt S Trout <mstrout@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2006 by Infinity Interactive, Inc.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
