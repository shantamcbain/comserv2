.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.0102 (Pod::Simple 3.45)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Moose::Exception 3"
.TH Moose::Exception 3 2025-07-04 "perl v5.40.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Moose::Exception \- Superclass for Moose internal exceptions
.SH VERSION
.IX Header "VERSION"
version 2.4000
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This class contains attributes which are common to all Moose internal
exception classes.
.SH "WARNING WARNING WARNING"
.IX Header "WARNING WARNING WARNING"
If you're writing your own exception classes, you should instead prefer
the Throwable role or the Throwable::Error superclass \- this is
effectively a cut-down internal fork of the latter, and not designed
for use in user code.
.PP
Of course if you're writing metaclass traits, it would then make sense to
subclass the relevant Moose exceptions \- but only then.
.SH METHODS
.IX Header "METHODS"
.ie n .SS $exception\->message
.el .SS \f(CW$exception\fP\->message
.IX Subsection "$exception->message"
This attribute contains the exception message.
.PP
Every subclass of Moose::Exception is expected to override
\&\f(CW\*(C`_build_message\*(C'\fR method in order to construct this value.
.ie n .SS $exception\->trace
.el .SS \f(CW$exception\fP\->trace
.IX Subsection "$exception->trace"
This attribute contains the stack trace for the given exception. It returns a
Devel::StackTrace object.
.ie n .SS $exception\->as_string
.el .SS \f(CW$exception\fP\->as_string
.IX Subsection "$exception->as_string"
This method returns a stringified form of the exception, including a stack
trace. By default, this method skips Moose-internal stack frames until it sees
a caller outside of the Moose core. If the \f(CW\*(C`MOOSE_FULL_EXCEPTION\*(C'\fR environment
variable is true, these frames are included.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.IP \(bu 4
Moose::Manual::Exceptions
.SH AUTHORS
.IX Header "AUTHORS"
.IP \(bu 4
Stevan Little <stevan@cpan.org>
.IP \(bu 4
Dave Rolsky <autarch@urth.org>
.IP \(bu 4
Jesse Luehrs <doy@cpan.org>
.IP \(bu 4
Shawn M Moore <sartak@cpan.org>
.IP \(bu 4
יובל קוג'מן (Yuval Kogman) <nothingmuch@woobling.org>
.IP \(bu 4
Karen Etheridge <ether@cpan.org>
.IP \(bu 4
Florian Ragwitz <rafl@debian.org>
.IP \(bu 4
Hans Dieter Pearcey <hdp@cpan.org>
.IP \(bu 4
Chris Prather <chris@prather.org>
.IP \(bu 4
Matt S Trout <mstrout@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2006 by Infinity Interactive, Inc.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
