.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.0102 (Pod::Simple 3.45)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Moose::Cookbook::Basics::DateTime_ExtendingNonMooseParent 3"
.TH Moose::Cookbook::Basics::DateTime_ExtendingNonMooseParent 3 2025-07-04 "perl v5.40.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Moose::Cookbook::Basics::DateTime_ExtendingNonMooseParent \- Extending a non\-Moose parent class
.SH VERSION
.IX Header "VERSION"
version 2.4000
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\&  package My::DateTime;
\&
\&  use Moose;
\&  use MooseX::NonMoose;
\&  use DateTime::Calendar::Mayan;
\&  extends qw( DateTime );
\&
\&  has \*(Aqmayan_date\*(Aq => (
\&      is        => \*(Aqro\*(Aq,
\&      isa       => \*(AqDateTime::Calendar::Mayan\*(Aq,
\&      init_arg  => undef,
\&      lazy      => 1,
\&      builder   => \*(Aq_build_mayan_date\*(Aq,
\&      clearer   => \*(Aq_clear_mayan_date\*(Aq,
\&      predicate => \*(Aqhas_mayan_date\*(Aq,
\&  );
\&
\&  after \*(Aqset\*(Aq => sub {
\&      $_[0]\->_clear_mayan_date;
\&  };
\&
\&  sub _build_mayan_date {
\&      DateTime::Calendar::Mayan\->from_object( object => $_[0] );
\&  }
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This recipe demonstrates how to use Moose to subclass a parent which
is not Moose based. This recipe only works if the parent class uses a
blessed hash reference for object instances. If your parent is doing
something funkier, you should check out MooseX::NonMoose::InsideOut and MooseX::InsideOut.
.PP
The meat of this recipe is contained in MooseX::NonMoose, which does all
the grunt work for you.
.SH AUTHORS
.IX Header "AUTHORS"
.IP \(bu 4
Stevan Little <stevan@cpan.org>
.IP \(bu 4
Dave Rolsky <autarch@urth.org>
.IP \(bu 4
Jesse Luehrs <doy@cpan.org>
.IP \(bu 4
Shawn M Moore <sartak@cpan.org>
.IP \(bu 4
יובל קוג'מן (Yuval Kogman) <nothingmuch@woobling.org>
.IP \(bu 4
Karen Etheridge <ether@cpan.org>
.IP \(bu 4
Florian Ragwitz <rafl@debian.org>
.IP \(bu 4
Hans Dieter Pearcey <hdp@cpan.org>
.IP \(bu 4
Chris Prather <chris@prather.org>
.IP \(bu 4
Matt S Trout <mstrout@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2006 by Infinity Interactive, Inc.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
