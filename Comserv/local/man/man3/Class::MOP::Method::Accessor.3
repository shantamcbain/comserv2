.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.0102 (Pod::Simple 3.45)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Class::MOP::Method::Accessor 3"
.TH Class::MOP::Method::Accessor 3 2025-07-04 "perl v5.40.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Class::MOP::Method::Accessor \- Method Meta Object for accessors
.SH VERSION
.IX Header "VERSION"
version 2.4000
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\&    use Class::MOP::Method::Accessor;
\&
\&    my $reader = Class::MOP::Method::Accessor\->new(
\&        attribute     => $attribute,
\&        is_inline     => 1,
\&        accessor_type => \*(Aqreader\*(Aq,
\&    );
\&
\&    $reader\->body\->execute($instance); # call the reader method
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This is a subclass of \f(CW\*(C`Class::MOP::Method\*(C'\fR which is used by
\&\f(CW\*(C`Class::MOP::Attribute\*(C'\fR to generate accessor code. It handles
generation of readers, writers, predicates and clearers. For each type
of method, it can either create a subroutine reference, or actually
inline code by generating a string and \f(CW\*(C`eval\*(C'\fR'ing it.
.SH METHODS
.IX Header "METHODS"
.IP \fBClass::MOP::Method::Accessor\->new(%options)\fR 4
.IX Item "Class::MOP::Method::Accessor->new(%options)"
This returns a new \f(CW\*(C`Class::MOP::Method::Accessor\*(C'\fR based on the
\&\f(CW%options\fR provided.
.RS 4
.IP \(bu 4
attribute
.Sp
This is the \f(CW\*(C`Class::MOP::Attribute\*(C'\fR for which accessors are being
generated. This option is required.
.IP \(bu 4
accessor_type
.Sp
This is a string which should be one of "reader", "writer",
"accessor", "predicate", or "clearer". This is the type of method
being generated. This option is required.
.IP \(bu 4
is_inline
.Sp
This indicates whether or not the accessor should be inlined. This
defaults to false.
.IP \(bu 4
name
.Sp
The method name (without a package name). This is required.
.IP \(bu 4
package_name
.Sp
The package name for the method. This is required.
.RE
.RS 4
.RE
.ie n .IP \fR\fB$metamethod\fR\fB\->accessor_type\fR 4
.el .IP \fR\f(CB$metamethod\fR\fB\->accessor_type\fR 4
.IX Item "$metamethod->accessor_type"
Returns the accessor type which was passed to \f(CW\*(C`new\*(C'\fR.
.ie n .IP \fR\fB$metamethod\fR\fB\->is_inline\fR 4
.el .IP \fR\f(CB$metamethod\fR\fB\->is_inline\fR 4
.IX Item "$metamethod->is_inline"
Returns a boolean indicating whether or not the accessor is inlined.
.ie n .IP \fR\fB$metamethod\fR\fB\->associated_attribute\fR 4
.el .IP \fR\f(CB$metamethod\fR\fB\->associated_attribute\fR 4
.IX Item "$metamethod->associated_attribute"
This returns the Class::MOP::Attribute object which was passed to
\&\f(CW\*(C`new\*(C'\fR.
.ie n .IP \fR\fB$metamethod\fR\fB\->body\fR 4
.el .IP \fR\f(CB$metamethod\fR\fB\->body\fR 4
.IX Item "$metamethod->body"
The method itself is \fIgenerated\fR when the accessor object is
constructed.
.SH AUTHORS
.IX Header "AUTHORS"
.IP \(bu 4
Stevan Little <stevan@cpan.org>
.IP \(bu 4
Dave Rolsky <autarch@urth.org>
.IP \(bu 4
Jesse Luehrs <doy@cpan.org>
.IP \(bu 4
Shawn M Moore <sartak@cpan.org>
.IP \(bu 4
יובל קוג'מן (Yuval Kogman) <nothingmuch@woobling.org>
.IP \(bu 4
Karen Etheridge <ether@cpan.org>
.IP \(bu 4
Florian Ragwitz <rafl@debian.org>
.IP \(bu 4
Hans Dieter Pearcey <hdp@cpan.org>
.IP \(bu 4
Chris Prather <chris@prather.org>
.IP \(bu 4
Matt S Trout <mstrout@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2006 by Infinity Interactive, Inc.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
