[% PageVersion  = 'todo.tt,v 0.1 2023/11/09 Shanta Exp Shanta' %]
[% IF debug_mode == 1 %]
    [% PageVersion %]
    [% "Debugging HostName: " _ HostName %]
    [%# INCLUDE 'debug.tt' %]
[% END %]
<h1>ToDo List</h1>
<h2>[% date_today %]</h2>
<h3><a href="/old_todo/ency/todo" >Old todo</a></h3>
<form action="/todo/add" method="post">
    <button type="submit">Add New Record</button>
</form>
<table>
  <tr>
    <th>Sitename</th>
    <th>Project</th>
    <th>Parent todo</th>
    <th>Start Date</th>
    <th>Due Date</th>
    <th>What needs to be done</th>
    <th>Details </th>
    <th>Who is responsible</th>
    <th>Priority</th>
    <th>Status</th>
    <th>Code needed for</th>
    <th>Action</th>
  </tr>
  [% FOREACH task IN tasks %]
    <tr>
      <td>[% task.sitename %]</td>
      <td>[% task.project %]</td>
      <td>[% task.parent_todo %]</td>
      <td>[% task.start_date %]</td>
      <td>[% task.due_date %]</td>
      <td>[% task.what_needs_to_be_done %]</td>
      <td>[% task.details %]</td>
      <td>[% task.who_is_responsible %]</td>
      <td>[% task.priority %]</td>
      <td>[% task.status %]</td>
      <td>[% task.code_needed_for %]</td>
      <td>
 <form action="/todo/add" method="POST">
  <input type="hidden" name="record_id" value="[% task.record_id %]">
  <button type="submit">Add ToDo</button>
</form>      </td>
    </tr>
  [% END %]
  <!-- Add a new ToDo item for fixing the error -->
  <tr>
    <td>Comserv</td>
    <td>Fix error in Comserv::Model::MyDB</td>
    <td>None</td>
    <td>[% date_today %]</td>
    <td>[% date_due %]</td>
    <td>Fix the error "Can't call method 'stash' on an undefined value" in Comserv::Model::MyDB</td>
    <td>Modify the _build_dbh method to correctly pass the $c variable to the method</td>
    <td>Developer</td>
    <td>High</td>
    <td>Not started</td>
    <td>Comserv::Model::MyDB</td>
    <td>
 <form action="/todo/add" method="POST">
  <input type="hidden" name="record_id" value="[% task.record_id %]">
  <button type="submit">Add ToDo</button>
</form>    </td>
   <tr>
    <td>Comserv</td>
    <td>Fix error in Comserv::Model::MyDB</td>
    <td>None</td>
    <td>[% date_started %]</td>
    <td>[% date_completed %]</td>
    <td>Fixed the error "Can't call method 'stash' on an undefined value" in Comserv::Model::MyDB</td>
    <td>
      <ol>
        <li>Checked where the $c object is coming from.</li>
        <li>Checked the timing of method calls.</li>
        <li>Modified the setup method in the Comserv::Controller::Root module to pass the $c object when calling the dbi_info method.</li>
      </ol>
    </td>
    <td>Developer</td>
    <td>High</td>
    <td>Completed</td>
    <td>Comserv::Model::MyDB</td>
    <td>
      <form action="/todo/details" method="POST">
        <input type="hidden" name="record_id" value="completed_task_id">
        <button type="submit">View Details</button>
      </form>
    </td>
  </tr>
  <tr>
  <td>Comserv</td>
  <td>Debug Schema Query</td>
  <td>None</td>
  <td>[% date_today %]</td>
  <td>[% date_due %]</td>
  <td>Debug the code to find out why it's not querying the schema and reporting it to the browser</td>
  <td>Ensure to include the ability to report errors into the browser</td>
  <td>Developer</td>
  <td>High</td>
  <td>Not started</td>
  <td>Comserv::Model::MyDB</td>
  <td>
<form action="/todo/add" method="POST">
  <input type="hidden" name="record_id" value="[% task.record_id %]">
  <button type="submit">Add ToDo</button>
</form>  </td>
</tr>
<tr>
  <td>Comserv</td>
  <td>Fix Connection Status Display</td>
  <td>None</td>
  <td>[% date_tomorrow %]</td>
  <td>[% date_due %]</td>
  <td>Fix the issue with the connection status not being displayed correctly in the debug.tt template</td>
  <td>Ensure that the session.dbi_connected variable is being set and saved correctly in the session and stash</td>
  <td>Developer</td>
  <td>High</td>
  <td>Not started</td>
  <td>Comserv::Model::MyDB</td>
  <td>
<form action="/todo/add" method="POST">
  <input type="hidden" name="record_id" value="[% task.record_id %]">
  <button type="submit">Add ToDo</button>
</form>  </td>
</tr>
  <tr>
  <td>Comserv</td>
  <td>Fix Exception in Comserv::Controller::Root->setup</td>
  <td>None</td>
  <td>[% date_tomorrow %]</td>
  <td>[% date_due %]</td>
  <td>Fix the exception "Can't call method 'get_schema_info' on unblessed reference at /home/shantam/PycharmProjects/CatalystComser1/Comserv/script/../lib/Comserv/Model/ToDo.pm line 39."</td>
  <td>Investigate why the 'get_schema_info' method is being called on an unblessed reference and fix the issue</td>
  <td>Developer</td>
  <td>High</td>
  <td>Not started</td>
  <td>Comserv::Controller::Root</td>
  <td>
<form action="/todo/add" method="POST">
  <input type="hidden" name="record_id" value="[% task.record_id %]">
  <button type="submit">Add ToDo</button>
</form>  </td>
</tr>
  <tr>
    <td>Comserv</td>
    <td>ToDo</td>
    <td>None</td>
    <td>[% date_today %]</td>
    <td>[% date_due %]</td>
    <td>Create a new git branch/project to handle logging debug errors and print statements into a file/db table</td>
    <td>This will help us trace errors</td>
    <td>Developer</td>
    <td>High</td>
    <td>Not started</td>
    <td>Comserv::Controller::Root</td>
    <td>
 <form action="/todo/add" method="POST">
  <input type="hidden" name="record_id" value="[% task.record_id %]">
  <button type="submit">Add ToDo</button>
</form>    </td>
  </tr>

<tr>
  <td>Comserv</td>
  <td>DataBaseSetup</td>
  <td>None</td>
  <td>2023-11-25</td>
  <td>2023-11-27</td>
  <td>Create a form in the setup.tt template that takes a table name as input. This form will be used to search the old schema for tables related to the input table name.</td>
  <td>Create a form in the setup.tt template that takes a table name as input. This form will be used to search the old schema for tables related to the input table name.</td>
  <td>Developer</td>
  <td>High</td>
  <td>Not started</td>
  <td>Comserv::Controller::Root</td>
  <td>
<form action="/todo/add" method="POST">
  <input type="hidden" name="record_id" value="1">
  <button type="submit">Add ToDo</button>
</form>  </td>
</tr>
<tr>
  <td>Comserv</td>
  <td>DataBaseSetup</td>
  <td>Search for schema</td>
  <td>2023-12-02</td>
  <td>2023-12-03</td>
  <td>In the Comserv::Controller::Root module, implement a method to handle the form submission. This method should retrieve the input table name from the form data.</td>
  <td>In the Comserv::Controller::Root module, implement a method to handle the form submission. This method should retrieve the input table name from the form data.</td>
  <td>Developer</td>
  <td>High</td>
  <td>Not started</td>
  <td>Comserv::Controller::Root</td>
  <td>
<form action="/todo/add" method="POST">
  <input type="hidden" name="record_id" value="2">
  <button type="submit">Add ToDo</button>
</form>  </td>
</tr>
<tr>
  <td>Comserv</td>
  <td>DataBaseSetup</td>
  <td>Search for schema</td>
  <td>2023-12-03</td>
  <td>2023-12-04</td>
  <td>In the Comserv::Model::MyDB module, implement a method to search the old schema for tables related to the input table name. This method should execute a query to retrieve the table structure for the input table name and any related tables.</td>
  <td>In the Comserv::Model::MyDB module, implement a method to search the old schema for tables related to the input table name. This method should execute a query to retrieve the table structure for the input table name and any related tables.</td>
  <td>Developer</td>
  <td>High</td>
  <td>Not started</td>
  <td>Comserv::Model::MyDB</td>
  <td>
<form action="/todo/add" method="POST">
  <input type="hidden" name="record_id" value="3">
  <button type="submit">Add ToDo</button>
</form>  </td>
</tr>
<tr>
  <td>Comserv</td>
  <td>DataBaseSetup</td>
  <td>Search for schema</td>
  <td>2023-12-04</td>
  <td>2023-12-05</td>
  <td>In the Comserv::Model::MyDB module, implement a method to search for tables that are related to a field or link table. This method should execute a query to retrieve the table structure for each related table.</td>
  <td>In the Comserv::Model::MyDB module, implement a method to search for tables that are related to a field or link table. This method should execute a query to retrieve the table structure for each related table.</td>
  <td>Developer</td>
  <td>High</td>
  <td>Not started</td>
  <td>Comserv::Model::MyDB</td>
  <td>
<form action="/todo/add" method="POST">
  <input type="hidden" name="record_id" value="4">
  <button type="submit">Add ToDo</button>
</form>  </td>
</tr>
<tr>
  <td>Comserv</td>
  <td>DataBaseSetup</td>
  <td>Search for schema</td>
  <td>2023-12-05</td>
  <td>2023-12-06</td>
  <td>In the Comserv::Model::MyDB module, implement a method to sort the list of tables by table name and the tables that are directly related to that table.</td>
  <td>In the Comserv::Model::MyDB module, implement a method to sort the list of tables by table name and the tables that are directly related to that table.</td>
  <td>Developer</td>
  <td>High</td>
  <td>Not started</td>
  <td>Comserv::Model::MyDB</td>
  <td>
<form action="/todo/add" method="POST">
  <input type="hidden" name="record_id" value="5">
  <button type="submit">Add ToDo</button>
</form>  </td>
</tr>
<tr>
  <td>Comserv</td>
  <td>DataBaseSetup</td>
  <td>Search for schema</td>
  <td>2023-12-06</td>
  <td>2023-12-07</td>
  <td>In the Comserv::Controller::Root module, implement a method to display the sorted list of tables and their related tables. This method should pass the sorted list to the setup.tt template for rendering.</td>
  <td>In the Comserv::Controller::Root module, implement a method to display the sorted list of tables and their related tables. This method should pass the sorted list to the setup.tt template for rendering.</td>
  <td>Developer</td>
  <td>High</td>
  <td>Not started</td>
  <td>Comserv::Controller::Root</td>
  <td>
<form action="/todo/add" method="POST">
  <input type="hidden" name="record_id" value="6">
  <button type="submit">Add ToDo</button>
</form>  </td>
</tr>
<tr>
  <td>Comserv</td>
  <td>DataBaseSetup</td>
  <td>Search for schema</td>
  <td>2023-12-07</td>
  <td>2023-12-08</td>
  <td>Update the setup.tt template to display the sorted list of tables and their related tables. This update should include a new section for displaying the search results.</td>
  <td>Update the setup.tt template to display the sorted list of tables and their related tables. This update should include a new section for displaying the search results.</td>
  <td>Developer</td>
  <td>High</td>
  <td>Not started</td>
  <td>Comserv::Controller::Root</td>
  <td>
<form action="/todo/add" method="POST">
  <input type="hidden" name="record_id" value="7">
  <button type="submit">Add ToDo</button>
</form>  </td>
</tr>
<tr>
  <td>Comserv</td>
  <td>DataBaseSetup</td>
  <td>Search for schema</td>
  <td>2023-12-08</td>
  <td>2023-12-09</td>
  <td>Test the feature by searching for tables related to the "todo" table. Verify that the search results are displayed correctly and that the tables are sorted as expected.</td>
  <td>Test the feature by searching for tables related to the "todo" table. Verify that the search results are displayed correctly and that the tables are sorted as expected.</td>
  <td>Developer</td>
  <td>High</td>
  <td>Not started</td>
  <td>Comserv::Controller::Root</td>
  <td>
<form action="/todo/add" method="POST">
  <input type="hidden" name="record_id" value="8">
  <button type="submit">Add ToDo</button>
</form>  </td>
</tr>
<tr>
  <td>Comserv</td>
  <td>DataBaseSetup</td>
  <td>Search for schema</td>
  <td>2023-12-09</td>
  <td>2023-12-10</td>
  <td>Document the feature in the project's documentation. This documentation should include a description of the feature, instructions for how to use it, and examples of the expected output.</td>
  <td>Document the feature in the project's documentation. This documentation should include a description of the feature, instructions for how to use it, and examples of the expected output.</td>
  <td>Developer</td>
  <td>High</td>
  <td>Not started</td>
  <td>Comserv::Controller::Root</td>
  <td>
<form action="/todo/add" method="POST">
  <input type="hidden" name="record_id" value="9">
  <button type="submit">Add ToDo</button>
</form>  </td>
</tr>
<tr>
  <td>Comserv</td>
  <td>DataBaseSetup</td>
  <td>Search for schema</td>
  <td>2023-12-10</td>
  <td>2023-12-11</td>
  <td>Commit the changes to the project's version control system and push the changes to the remote repository.</td>
  <td>Commit the changes to the project's version control system and push the changes to the remote repository.</td>
  <td>Developer</td>
  <td>High</td>
  <td>Not started</td>
  <td>Comserv::Controller::Root</td>
  <td>
<form action="/todo/add" method="POST">
  <input type="hidden" name="record_id" value="10">
  <button type="submit">Add ToDo</button>
</form>  </td>
</tr>
<tr>
  <td>Comserv</td>
  <td>ToDo</td>
  <td>Create ToDo Schema</td>
  <td>2023-12-01</td>
  <td>2023-12-02</td>
  <td>Create a ToDo schema that includes fields for the ToDo title, description, due date, priority, project, and user.</td>
  <td>Create a ToDo schema that includes fields for the ToDo title, description, due date, priority, project, and user.</td>
  <td>Developer</td>
  <td>High</td>
  <td>Not started</td>
  <td>Comserv::Model::ToDo</td>
  <td>
<form action="/todo/add" method="POST">
  <input type="hidden" name="record_id" value="1">
  <button type="submit">Add ToDo</button>
</form>  </td>
</tr>
<tr>
  <td>Comserv</td>
  <td>ToDo</td>
  <td>Create Database Tables</td>
  <td>2023-12-02</td>
  <td>2023-12-03</td>
  <td>Create tables in the database that match the ToDo schema.</td>
  <td>Create tables in the database that match the ToDo schema.</td>
  <td>Developer</td>
  <td>High</td>
  <td>Not started</td>
  <td>Comserv::Model::ToDo</td>
  <td>
<form action="/add" method="POST">
  <input type="hidden" name="record_id" value="2">
  <button type="submit">Add ToDo</button>
</form>  </td>
</tr>
<tr>
  <td>Comserv</td>
  <td>ToDo</td>
  <td>Create Server-Side Route</td>
  <td>2023-12-03</td>
  <td>2023-12-04</td>
  <td>Implement a server-side route that handles the creation of a new ToDo. This route should take the form data, create a new ToDo in the database, and return a response.</td>
  <td>Implement a server-side route that handles the creation of a new ToDo. This route should take the form data, create a new ToDo in the database, and return a response.</td>
  <td>Developer</td>
  <td>High</td>
  <td>Not started</td>
  <td>Comserv::Controller::ToDo</td>
  <td>
<form action="/todo/add" method="POST">
  <input type="hidden" name="record_id" value="5">
  <input type="text" name="sitename" value="Comserv">
  <input type="text" name="subject" value="Add Logging">
  <input type="text" name="description" value="Add logging to track the activity in the ToDo system. Log events such as adding, editing, and deleting ToDo items.">
  <input type="date" name="start_date" value="2023-12-05">
  <input type="date" name="due_date" value="2023-12-06">
  <input type="number" name="priority" value="High">
  <input type="text" name="status" value="Not started">
  <input type="text" name="last_mod_by" value="Developer">
  <input type="date" name="last_mod_date" value="2023-12-05">
  <input type="text" name="group_of_poster" value="Comserv::Log">
  <!-- Add the rest of your fields here -->
  <button type="submit">Add ToDo</button>
</form> </td>
</tr>
<tr>
  <td>Comserv</td>
  <td>ToDo</td>
  <td>Modify todo.tt</td>
  <td>2023-12-04</td>
  <td>2023-12-05</td>
  <td>Modify the todo.tt file to include a form for adding new ToDos. This form should have fields for the ToDo details and a submit button. The form action should be set to the server-side route that handles the creation of a new ToDo.</td>
  <td>Modify the todo.tt file to include a form for adding new ToDos. This form should have fields for the ToDo details and a submit button. The form action should be set to the server-side route that handles the creation of a new ToDo.</td>
  <td>Developer</td>
  <td>High</td>
  <td>Not started</td>
  <td>Comserv::View::TT</td>
  <td>
<form action="/todo/add" method="POST">
  <input type="hidden" name="record_id" value="5">
  <input type="text" name="sitename" value="Comserv">
  <input type="text" name="subject" value="Add Logging">
  <input type="text" name="description" value="Add logging to track the activity in the ToDo system. Log events such as adding, editing, and deleting ToDo items.">
  <input type="date" name="start_date" value="2023-12-05">
  <input type="date" name="due_date" value="2023-12-06">
  <input type="number" name="priority" value="High">
  <input type="text" name="status" value="Not started">
  <input type="text" name="last_mod_by" value="Developer">
  <input type="date" name="last_mod_date" value="2023-12-05">
  <input type="text" name="group_of_poster" value="Comserv::Log">
  <!-- Add the rest of your fields here -->
  <button type="submit">Add ToDo</button>
</form>  </td>
</tr>
<tr>
  <td>Comserv</td>
  <td>ToDo</td>
  <td>Add Logging</td>
  <td>2023-12-05</td>
  <td>2023-12-06</td>
  <td>Add logging to track the activity in the ToDo system. Log events such as adding, editing, and deleting ToDo items.</td>
  <td>Add logging to track the activity in the ToDo system. Log events such as adding, editing, and deleting ToDo items.</td>
  <td>Developer</td>
  <td>High</td>
  <td>Not started</td>
  <td>Comserv::Log</td>
  <td>
 <form action="/old_todo" method="POST">
  <input type="text" name="sitename" value="Comserv">
  <input type="text" name="subject" value="Add Logging">
  <input type="text" name="description" value="Add logging to track the activity in the ToDo system. Log events such as adding, editing, and deleting ToDo items.">
  <input type="date" name="start_date" value="2023-12-05">
  <input type="date" name="due_date" value="2023-12-06">
  <input type="number" name="priority" value="10">
  <input type="text" name="status" value="Not started">
  <input type="text" name="last_mod_by" value="Developer">
  <input type="date" name="last_mod_date" value="2023-12-05">
  <input type="text" name="group_of_poster" value="Comserv::Log">
  <!-- Add the rest of your fields here -->
  <button type="submit">Add ToDo</button>
</form> </td>
<tr><form action="/old_todo" method="POST">
  <input type="text" name="sitename" value="Comserv">
  <input type="text" name="subject" value="Setup Schema for ToDo System">
  <textarea name="description">Start the process of development for creating the schema for the ToDo system. This includes creating the necessary tables (Group, Log, Project, ProjectSite, Site, Todo) and relationships in the database, updating the DBIx::Class schema classes, and testing the schema to ensure it works as expected. The tables are related as follows: A Todo will list the sitename gotten from Site. If the Site is deleted so is the Todo. The Todo has the same relationship with Project. Projects are tied to a Site. Logs are linked to Site, User, and Project. There will be more relationships as we develop it. The files that will be worked on to access the schema by the application include: Comserv::Model::Schema::Ency::Result::Group, Comserv::Model::Schema::Ency::Result::Log, Comserv::Model::Schema::Ency::Result::Project, Comserv::Model::Schema::Ency::Result::ProjectSite, Comserv::Model::Schema::Ency::Result::Site, Comserv::Model::Schema::Ency::Result::Todo.</textarea>
  <input type="date" name="start_date" value="2023-12-05">
  <input type="date" name="due_date" value="2023-12-10">
  <input type="number" name="estimated_man_hours" value="40">
  <input type="number" name="accumulative_time" value="0">
  <input type="text" name="project_code" value="DB_SETUP">
  <input type="text" name="status" value="Not started">
  <input type="number" name="priority" value="1">
  <input type="number" name="share" value="1">
  <input type="text" name="last_mod_by" value="Developer">
  <input type="date" name="last_mod_date" value="2023-12-05">
  <input type="text" name="group_of_poster" value="Comserv::Schema">
  <input type="number" name="user_id" value="1">
  <input type="number" name="project_id" value="1">
  <button type="submit">Add ToDo</button>
</form>
</tr>
</table>