[% PageVersion = 'Comserv/root/Documentation/AI_DOCUMENTATION_GUIDELINES.tt,v 0.01 2025/06/10 shanta Exp shanta ' %]
[% IF c.session.debug_mode == 1 %]
    [% PageVersion %]
[% END %]

[% META title = 'AI Documentation Guidelines' %]

<!-- Documentation page for AI_DOCUMENTATION_GUIDELINES -->
<div class="documentation-content">




<!-- Documentation CSS is now included in the theme system -->

<div class="markdown-content">


<h2>Overview</h2>

This document provides guidelines for AI assistants working with the Comserv2 project, specifically focusing on documentation management and organization.



<h2>Documentation Organization</h2>



<h3>Directory Structure</h3>

All documentation must be placed in the appropriate subdirectory of <code>/Comserv/root/Documentation/</code>:



<ul><li><code>/changelog/</code> - Documentation of changes and fixes</li></ul>

<ul><li><code>/controllers/</code> - Controller-specific documentation</li></ul>

<ul><li><code>/models/</code> - Model-specific documentation</li></ul>

<ul><li><code>/deployment/</code> - Deployment and server setup guides</li></ul>

<ul><li><code>/system/</code> - System-level documentation</li></ul>

<ul><li><code>/themes/</code> - Theme system documentation</li></ul>

<ul><li><code>/tutorials/</code> - User and developer tutorials</li></ul>

<ul><li><code>/general/</code> - General documentation</li></ul>



<h3>Important Rules</h3>



<ol><li>**NEVER create documentation files in the application root directory**</li></ol>

   - All documentation must be placed in the appropriate subdirectory of <code>/Comserv/root/Documentation/</code>

   - The only exception is the main README.md file in the application root



<ol><li>**NEVER create categorization files**</li></ol>

   - Do not create files with names like "Added X to Y category"

   - Do not create files with names like "Formatting title from: X"

   - Do not create files with names like "Categorized as X: Y"

   - Do not create files with names like "Category X has Y pages"



<ol><li>**NEVER create temporary files**</li></ol>

   - All files should be properly named and placed in the appropriate directory

   - Do not create files with temporary or intermediate content



<h2>Documentation Standards</h2>



<ol><li>**File Format**</li></ol>

   - Use Markdown format with the <code>.md</code> extension

   - Follow consistent formatting within documents



<ol><li>**File Naming**</li></ol>

   - Use lowercase with underscores for spaces

   - For changelog entries, use the format: <code>YYYY-MM-description.md</code>

   - For controller documentation, use the controller name: <code>ControllerName.md</code>



<ol><li>**Documentation Structure**</li></ol>

   - Start with a clear title using <code># Title</code>

   - Include an overview section

   - Use appropriate headings for sections

   - Include code examples where relevant

   - Link to related documentation



<h2>Creating New Documentation</h2>



When creating new documentation:



<ol><li>**Determine the appropriate category**</li></ol>

   - Controller documentation goes in <code>/controllers/</code>

   - Model documentation goes in <code>/models/</code>

   - General guides go in <code>/general/</code>

   - Changelog entries go in <code>/changelog/</code>



<ol><li>**Create the file in the correct location**</li></ol>

   - Use the <code>str_replace_editor</code> tool with the correct path

   - Example: <code>/home/shanta/PycharmProjects/comserv2/Comserv/root/Documentation/controllers/MyController.md</code>



<ol><li>**Update related documentation**</li></ol>

   - If documenting a controller, update the controller list in <code>/controllers/controller_list.md</code>

   - If adding a changelog entry, ensure it follows the standard format



<h2>Example: Documenting a Controller</h2>



<code></code>`markdown

<h1>MyController Controller</h1>



<h2>Overview</h2>

Brief description of the controller's purpose.



<h2>Key Features</h2>

<ul><li>Feature 1</li></ul>

<ul><li>Feature 2</li></ul>

<ul><li>Feature 3</li></ul>



<h2>Methods</h2>

<ul><li><code>method1</code>: Description</li></ul>

<ul><li><code>method2</code>: Description</li></ul>

<ul><li><code>method3</code>: Description</li></ul>



<h2>Access Control</h2>

This controller is accessible to users with the following roles:

<ul><li>role1</li></ul>

<ul><li>role2</li></ul>



<h2>Related Files</h2>

<ul><li>Related file 1</li></ul>

<ul><li>Related file 2</li></ul>

<code></code>`



<h2>Example: Creating a Changelog Entry</h2>



<code></code>`markdown

<h1>Feature X Implementation - Month YYYY</h1>



<h2>Overview</h2>

Brief description of the change.



<h2>Changes Made</h2>

<ul><li>Change 1</li></ul>

<ul><li>Change 2</li></ul>

<ul><li>Change 3</li></ul>



<h2>Files Modified</h2>

<ul><li><code>/path/to/file1</code></li></ul>

<ul><li><code>/path/to/file2</code></li></ul>



<h2>Testing</h2>

How to test the changes.

<code></code>`



<h2>Maintaining Documentation</h2>



When updating the system:



<ol><li>Update relevant documentation files</li></ol>

<ol><li>Create changelog entries for significant changes</li></ol>

<ol><li>Ensure documentation is placed in the correct location</li></ol>

<ol><li>Keep the documentation structure consistent</li></ol>



<h2>Cleaning Up Documentation</h2>



If you find documentation files in the wrong location or categorization files:



<ol><li>Use the cleanup script: <code>/Comserv/root/Documentation/scripts/cleanup_categorization_files.pl</code></li></ol>

<ol><li>Move documentation files to the correct location using the script: <code>/Comserv/root/Documentation/scripts/move_docs_to_proper_location.pl</code></li></ol>

</div>

<h2>Documentation Strategy & Standards</h2>

### Core Documentation Principles
#### Gap Narrowing Protocol (New)
 1) Audit code vs documentation to identify gaps between implemented behavior and documented behavior.
 2) Create a Diff Log entry (TT format) to capture each gap, proposed remediation, and rationale.
 3) Run the MD-to-TT migration tool at /Comserv/root/Documentation/scripts/md_to_tt_migration.pl to migrate Markdown docs to TT.
 4) For any remaining MDs surfaced in browser, convert to TT using convert_md_to_tt.pl and verify PageVersion headers.
 5) Update documentation_config.json if browser-visible content changes paths or formats.
 6) Record results in a changelog entry under /Comserv/root/Documentation/changelog.

