[% PageVersion = 'Documentation/Root.tt,v 0.012 2024/05/28 Shanta Exp shanta ' %]
[%# PageVersion = 'Documentation/Root.tt,v 0.011 2024/01/28 Shanta Exp shanta ' %]
[%# PageVersion = 'Documentation/Root.tt,v 0.01 2024/01/28 Shanta Exp shanta ' %]
[% IF c.session.debug_mode == 1 %]
    [% PageVersion %]
[% END %]
<h1 id="top">Comserv App Documentation Root.pm </h1>

<p>The Root controller in the Comserv application is responsible for handling the initial request and setting up the necessary variables for the application. It does this through several methods:</p>

<h2>auto</h2>
<p>The 'auto' method is called before every action in the application. It's responsible for setting up the necessary variables for the application. It does this by:</p>
<ul>
    <li>Extracting the domain name from the request</li>
    <li>Calling the 'forward_to_controller_based_on_domain' method to determine the controller based on the domain</li>
    <li>Setting up universal variables</li>
    <li>Fetching and setting the site name</li>
    <li>Setting up the session and stash with necessary parameters</li>
</ul>

<h2>forward_to_controller_based_on_domain</h2>
<p>The 'forward_to_controller_based_on_domain' method is used to determine the controller based on the domain name. It does this by:</p>
<ul>
    <li>Fetching the site domain record from the Site model using the domain name</li>
    <li>If a site domain record is found, it gets the site_id from the site domain record and fetches the site details from the Site model using the site_id</li>
    <li>If a site is found, it gets the controller name from the site details and forwards the request to the appropriate controller</li>
    <li>If no site domain record is found, it forwards the request to a default controller</li>
</ul>

<h2>fetch_and_set</h2>
<p>The 'fetch_and_set' method is used to fetch a parameter from the URL, session, or database and set it in the session and stash. It does this by:</p>
<ul>
    <li>Checking if the parameter is defined in the URL. If it is, it updates the session and stash with this value</li>
    <li>If it's not defined in the URL but is defined in the session, it uses the session value</li>
    <li>If it's not defined in either the URL or session, it uses the domain name to fetch the site name from the Site model and sets it in the session and stash</li>
</ul>

<h2>index</h2>
<p>The 'index' method is used to handle the default request. It does this by:</p>
<ul>
    <li>Getting the controller name from the stash</li>
    <li>If the controller name exists, it checks if it's a controller or a template and sets the template or detaches to the controller accordingly</li>
    <li>If the controller name doesn't exist, it sets a default template</li>
</ul>
<h2>site_setup</h2>
<p>The 'site_setup' method is used to fetch the site details from the Site model using the SiteName. It sets up the stash with necessary parameters such as css_view_name, mail_to_admin, and mail_replyto. It also sets up the default CSS paths for the application.</p>

<h2>debug</h2>
<p>The 'debug' method is used to forward the request to the 'TT' view with the 'debug.tt' template. This is used for debugging purposes.</p>

<h2>default</h2>
<p>The 'default' method is used to handle the default request when a page is not found. It sets the response body to 'Page not found' and the response status to 404.</p>

<h2>documentation</h2>
<p>The 'documentation' method is used to set the template to 'Documentation/Documentation.tt'. This is used to display the documentation page.</p>

<h2>end</h2>
<p>The 'end' method is called at the end of every request to render the view.</p>
<p>These methods work together to handle the initial request, set up the necessary variables, and render the appropriate view based on the request.</p>