[% PageVersion  = 'Comserv/root/Documentation/Schema.tt,v 0.2 2025/01/15 Shanta Exp Shanta - Fixed dynamic table creation system'; %]
[% IF debug_mode == 1 %]
    <p>Error: [% error_msg %]</p>
    [% PageVersion %]
[% END %]

<h1 id="schema-top"><a href="#top">Database Schema Installation</a></h1>

<nav>
    <a href="#schema-prerequisites">Prerequisites</a> |
    <a href="#schema-installation">Installation</a>
</nav>

<h3 id="schema-prerequisites"><a href="#schema-top">Back to top</a> </h3>
<p>Before you begin, make sure you have the following:</p>
<ul>
    <li>MySQL Server installed on your server</li>
    <li>Access to the command line on your server</li>
    <li>The `ency.sql` backup file</li>
</ul>

<h3 id="schema-installation"><a href="#schema-top">Back to top</a></h3>

<h1 id="schemam-top">Database Schema Management Guide</h1>

<nav>
    <a href="#schemam-overview">1. Overview</a> |
    <a href="#current-schemam">2. Current Schema Structure</a> |
    <a href="#schemam-evolution">3. Schema Evolution Plan</a> |
    <a href="#schemam-database-synchronization">4. Database Synchronization</a> |
    <a href="#schemam-best-practices">5. Best Practices</a> |
    <a href="#schemam-versioning">6. Schema Versioning</a> |
    <a href="#schemam-documentation-updates">7. Schema Documentation Updates</a> |
    <a href="#schemam-troubleshooting">8. Troubleshooting and Common Issues</a> |
    <a href="#schemam-references">9. References</a>
</nav>

<h2 id="schemam-overview"><a href="#schemam-top">1. Overview</a></h2>
<p>Brief introduction to the purpose of the schema and its importance in the application.</p>

<h2 id="current-schemam"><a href="#schemam-top">2. Current Schema Structure</a></h2>
<p>Detailed description of the existing tables and their relationships in both the Ency and Forager databases.</p>

<h2 id="schemam-evolution"><a href="#schemam-top">3. Schema Evolution Plan</a></h2>
<p>Step-by-step guide on how to update the schema to accommodate changes in the application requirements:</p>
<ol>
    <li>Identify required schema changes based on application updates.</li>
    <li>Create SQL migration scripts to implement schema changes.</li>
    <li>Test migration scripts in a development environment.</li>
    <li>Execute migration scripts in production, ensuring proper backups are in place.</li>
    <li>Verify schema changes and test application functionality.</li>
</ol>

<h2 id="schemam-database-synchronization"><a href="#schemam-top">4. Database Synchronization</a></h2>
<p>Strategies and tools for keeping schema and data synchronized across multiple servers:</p>
<ol>
    <li>Implement automated database synchronization tools.</li>
    <li>Establish replication or clustering for high availability and data redundancy.</li>
    <li>Regularly monitor synchronization status and resolve any discrepancies.</li>
</ol>

<h2 id="schemam-best-practices"><a href="#schemam-top">5. Best Practices</a></h2>
<p>Recommendations for maintaining a well-organized and efficient database schema:</p>
<ol>
    <li>Follow naming conventions for tables, columns, and relationships.</li>
    <li>Document schema changes and rationale for future reference.</li>
    <li>Regularly optimize database performance and indexes.</li>
</ol>

<h2 id="schemam-versioning"><a href="#schemam-top">6. Schema Versioning</a></h2>
<p>Implementation of version control for the schema to track changes and ensure consistency:</p>
<ol>
    <li>Use version control systems (e.g., Git) to track schema changes.</li>
    <li>Tag schema versions for easy reference and rollback if needed.</li>
</ol>

<h2 id="schemam-documentation-updates"><a href="#schemam-top">7. Schema Documentation Updates</a></h2>
<p>Procedures for keeping the schema documentation up-to-date with any changes made to the database structure:</p>
<ol>
    <li>Automate documentation generation from schema metadata.</li>
    <li>Include schema change logs in documentation updates.</li>
</ol>

<h2 id="schemam-troubleshooting"><a href="#schemam-top">8. Troubleshooting and Common Issues</a></h2>
<p>Solutions for common problems encountered during schema management and synchronization:</p>

<h3 id="dynamic-table-creation-not-working">Dynamic Table Creation Not Working</h3>
<p><strong>Problem:</strong> Schema comparison shows Result files without corresponding database tables, but clicking "Create" buttons shows "functionality not yet implemented" alerts instead of creating tables.</p>

<p><strong>Root Cause:</strong> JavaScript functions in <code>/admin/schema_compare.tt</code> template are showing placeholder alerts instead of calling backend endpoints.</p>

<p><strong>Solution:</strong> Update JavaScript functions to call proper backend endpoints:</p>

<h4>Files to Check:</h4>
<ul>
    <li><strong>Template:</strong> <code>Comserv/root/admin/schema_compare.tt</code></li>
    <li><strong>Backend:</strong> <code>Comserv/lib/Comserv/Controller/Admin.pm</code></li>
    <li><strong>Model:</strong> <code>Comserv/lib/Comserv/Model/DBEncy.pm</code></li>
</ul>

<h4>JavaScript Functions to Fix:</h4>
<ol>
    <li><strong>createTableFromResult(resultName, database)</strong>
        <ul>
            <li>Should call: <code>/admin/create_table_from_result</code></li>
            <li>Method: POST with JSON body: <code>{"result_name": resultName, "database": database}</code></li>
            <li>If showing alert instead of AJAX call, replace with proper fetch() implementation</li>
        </ul>
    </li>
    <li><strong>createResultFromTable(tableName, database)</strong>
        <ul>
            <li>Should call: <code>/admin/create_result_from_table</code></li>
            <li>Method: POST with JSON body: <code>{"table_name": tableName, "database": database}</code></li>
            <li>If showing alert instead of AJAX call, replace with proper fetch() implementation</li>
        </ul>
    </li>
</ol>

<h4>Backend Endpoints (should exist):</h4>
<ul>
    <li><code>sub create_table_from_result :Path('/admin/create_table_from_result') :Args(0)</code> in Admin.pm</li>
    <li><code>sub create_result_from_table :Path('/admin/create_result_from_table') :Args(0)</code> in Admin.pm</li>
    <li><code>sub create_table_from_result</code> method in DBEncy.pm model</li>
</ul>

<h4>How the System Works:</h4>
<ol>
    <li><strong>Schema Comparison:</strong> Admin controller compares database tables with Result files</li>
    <li><strong>Missing Tables Identified:</strong> Result files without corresponding database tables are flagged</li>
    <li><strong>Dynamic Creation:</strong> "Create" buttons call backend endpoints</li>
    <li><strong>Table Generation:</strong> DBEncy model uses SQL::Translator to generate CREATE TABLE SQL from Result class definitions</li>
    <li><strong>Database Update:</strong> Generated SQL is executed to create missing tables</li>
</ol>

<h4>Testing the Fix:</h4>
<ol>
    <li>Go to <code>/admin/schema_compare</code></li>
    <li>Look for Result files without corresponding tables (red "Create" buttons)</li>
    <li>Click "Create" button - should show confirmation dialog, not "not implemented" alert</li>
    <li>Confirm creation - should show loading spinner and success message</li>
    <li>Page should refresh showing the new table in the comparison</li>
</ol>

<h3 id="other-schema-issues">Other Common Schema Issues</h3>
<ol>
    <li>Identify and resolve database conflicts during schema synchronization.</li>
    <li>Address performance issues resulting from schema changes.</li>
    <li>Result file loading errors - check Perl syntax and package names</li>
    <li>Database connection issues - verify credentials in db_config.json</li>
</ol>

<h2 id="schemam-references"><a href="#schemam-top">9. References</a></h2>
<p>Additional resources and tools for further reading on database schema management.</p>

<p>Follow these steps to install the MySQL backup on your server:</p>
<ol>
    <li>Open the command line on your server.</li>
    <li>Navigate to the directory where the `ency.sql` file is located.</li>
    <li>Log in to the MySQL server with the following command: `mysql -u username -p`. Replace `username` with your MySQL username. You will be prompted to enter your password.</li>
    <li>Create a new database with the following command: `CREATE DATABASE new_database;`. Replace `new_database` with the name of your new database.</li>
    <li>Select the new database with the following command: `USE new_database;`.</li>
    <li>Import the `ency.sql` file with the following command: `source ency.sql;`.</li>
</ol>
<p>Your MySQL database should now be installed on your server.</p>
