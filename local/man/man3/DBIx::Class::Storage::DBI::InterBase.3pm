.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "DBIx::Class::Storage::DBI::InterBase 3pm"
.TH DBIx::Class::Storage::DBI::InterBase 3pm 2022-05-15 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
DBIx::Class::Storage::DBI::InterBase \- Driver for the Firebird RDBMS via
DBD::InterBase
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This driver is a subclass of DBIx::Class::Storage::DBI::Firebird::Common for
use with DBD::InterBase, see that driver for general details.
.PP
You need to use either the
disable_sth_caching option or
"connect_call_use_softcommit" (see "CAVEATS") for your code to function
correctly with this driver. Otherwise you will likely get bizarre error messages
such as \f(CW\*(C`no statement executing\*(C'\fR. The alternative is to use the
ODBC driver, which is more suitable
for long running processes such as under Catalyst.
.PP
To turn on DBIx::Class::InflateColumn::DateTime support, see
"connect_call_datetime_setup".
.SS connect_call_use_softcommit
.IX Subsection "connect_call_use_softcommit"
Used as:
.PP
.Vb 1
\&  on_connect_call => \*(Aquse_softcommit\*(Aq
.Ve
.PP
In connect_info to set the
DBD::InterBase \f(CW\*(C`ib_softcommit\*(C'\fR option.
.PP
You need either this option or \f(CW\*(C`disable_sth_caching => 1\*(C'\fR for
DBIx::Class code to function correctly (otherwise you may get \f(CW\*(C`no statement
executing\*(C'\fR errors.) Or use the ODBC
driver.
.PP
The downside of using this option is that your process will \fBNOT\fR see UPDATEs,
INSERTs and DELETEs from other processes for already open statements.
.SS connect_call_datetime_setup
.IX Subsection "connect_call_datetime_setup"
Used as:
.PP
.Vb 1
\&  on_connect_call => \*(Aqdatetime_setup\*(Aq
.Ve
.PP
In connect_info to set the date and
timestamp formats using:
.PP
.Vb 1
\&  $dbh\->{ib_time_all} = \*(AqISO\*(Aq;
.Ve
.PP
See DBD::InterBase for more details.
.PP
The \f(CW\*(C`TIMESTAMP\*(C'\fR data type supports up to 4 digits after the decimal point for
second precision. The full precision is used.
.PP
The \f(CW\*(C`DATE\*(C'\fR data type stores the date portion only, and it \fBMUST\fR be declared
with:
.PP
.Vb 1
\&  data_type => \*(Aqdate\*(Aq
.Ve
.PP
in your Result class.
.PP
Timestamp columns can be declared with either \f(CW\*(C`datetime\*(C'\fR or \f(CW\*(C`timestamp\*(C'\fR.
.PP
You will need the DateTime::Format::Strptime module for inflation to work.
.PP
For DBIx::Class::Storage::DBI::ODBC::Firebird, this is a noop.
.SH CAVEATS
.IX Header "CAVEATS"
.IP \(bu 4
with "connect_call_use_softcommit", you will not be able to see changes made
to data in other processes. If this is an issue, use
disable_sth_caching as a
workaround for the \f(CW\*(C`no statement executing\*(C'\fR errors, this of course adversely
affects performance.
.Sp
Alternately, use the ODBC driver.
.SH "FURTHER QUESTIONS?"
.IX Header "FURTHER QUESTIONS?"
Check the list of additional DBIC resources.
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This module is free software copyright
by the DBIx::Class (DBIC) authors. You can
redistribute it and/or modify it under the same terms as the
DBIx::Class library.
