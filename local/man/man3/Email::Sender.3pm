.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Email::Sender 3pm"
.TH Email::Sender 3pm 2024-01-18 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Email::Sender \- a library for sending email
.SH VERSION
.IX Header "VERSION"
version 2.601
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 3
\&  my $message = Email::MIME\->create( ... );
\&  # produce an Email::Abstract compatible message object,
\&  # e.g. produced by Email::Simple, Email::MIME, Email::Stuff
\&
\&  use Email::Sender::Simple qw(sendmail);
\&  use Email::Sender::Transport::SMTP qw();
\&  use Try::Tiny;
\&
\&  try {
\&    sendmail(
\&      $message,
\&      {
\&        from => $SMTP_ENVELOPE_FROM_ADDRESS,
\&        transport => Email::Sender::Transport::SMTP\->new({
\&            host => $SMTP_HOSTNAME,
\&            port => $SMTP_PORT,
\&        })
\&      }
\&    );
\&  } catch {
\&      warn "sending failed: $_";
\&  };
.Ve
.SH OVERVIEW
.IX Header "OVERVIEW"
Email::Sender replaces the old and sometimes problematic Email::Send library,
which did a decent job at handling very simple email sending tasks, but was not
suitable for serious use, for a variety of reasons.
.PP
Most users will be able to use Email::Sender::Simple to send mail.  Users
with more specific needs should look at the available Email::Sender::Transport
classes.
.PP
Documentation may be found in Email::Sender::Manual, and new users should
start with Email::Sender::Manual::QuickStart.
.SH "PERL VERSION"
.IX Header "PERL VERSION"
This library should run on perls released even a long time ago.  It should
work on any version of perl released in the last five years.
.PP
Although it may work on older versions of perl, no guarantee is made that the
minimum required version will not be increased.  The version may be increased
for any reason, and there is no promise that patches will be accepted to
lower the minimum required perl.
.SH IMPLEMENTING
.IX Header "IMPLEMENTING"
Email::Sender itself is a Moo role.  Any class that implements Email::Sender
is required to provide a method called \f(CW\*(C`send\*(C'\fR.  This method should accept any
input that can be understood by Email::Abstract, followed by a hashref
containing \f(CW\*(C`to\*(C'\fR and \f(CW\*(C`from\*(C'\fR arguments to be used as the envelope.  The method
should return an Email::Sender::Success object on success or throw an
Email::Sender::Failure on failure.
.SH AUTHOR
.IX Header "AUTHOR"
Ricardo Signes <cpan@semiotic.systems>
.SH CONTRIBUTORS
.IX Header "CONTRIBUTORS"
.IP \(bu 4
Alex Efros <powerman@powerman.name>
.IP \(bu 4
Aristotle Pagaltzis <pagaltzis@gmx.de>
.IP \(bu 4
Bernhard Graf <augensalat@gmail.com>
.IP \(bu 4
Christian Walde <walde.christian@googlemail.com>
.IP \(bu 4
David Golden <dagolden@cpan.org>
.IP \(bu 4
David Steinbrunner <dsteinbrunner@pobox.com>
.IP \(bu 4
Erik Huelsmann <ehuels@gmail.com>
.IP \(bu 4
Hans Dieter Pearcey <hdp@cpan.org>
.IP \(bu 4
HIROSE Masaaki <hirose31@gmail.com>
.IP \(bu 4
James E Keenan <jkeenan@cpan.org>
.IP \(bu 4
Justin Hunter <justin.d.hunter@gmail.com>
.IP \(bu 4
Karen Etheridge <ether@cpan.org>
.IP \(bu 4
Kenichi Ishigaki <ishigaki@cpan.org>
.IP \(bu 4
kga <watrty@gmail.com>
.IP \(bu 4
Kris Matthews <kris@tigerlms.com>
.IP \(bu 4
Marc Bradshaw <marc@marcbradshaw.net>
.IP \(bu 4
Ricardo Signes <rjbs@semiotic.systems>
.IP \(bu 4
Ricardo Signes <rjbs@users.noreply.github.com>
.IP \(bu 4
Stefan Hornburg (Racke) <racke@linuxia.de>
.IP \(bu 4
William Blunn <zgpmax@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2024 by Ricardo Signes.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
