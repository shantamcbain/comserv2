.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Crypt::Stream::Rabbit 3pm"
.TH Crypt::Stream::Rabbit 3pm 2025-02-08 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Crypt::Stream::Rabbit \- Stream cipher Rabbit
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\&   use Crypt::Stream::Rabbit;
\&
\&   # encrypt
\&   $key = "1234567890123456";
\&   $iv  = "12345678";
\&   $stream = Crypt::Stream::Rabbit\->new($key, $iv);
\&   $ct = $stream\->crypt("plain message");
\&
\&   # decrypt
\&   $key = "1234567890123456";
\&   $iv  = "12345678";
\&   $stream = Crypt::Stream::Rabbit\->new($key, $iv);
\&   $pt = $stream\->crypt($ct);
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
Provides an interface to the Rabbit stream cipher.
.SH METHODS
.IX Header "METHODS"
.SS new
.IX Subsection "new"
.Vb 3
\& $stream = Crypt::Stream::Rabbit\->new($key, $iv);
\& # $key .. keylen must be up to 16 bytes
\& # $iv  .. ivlen must be up to 8 bytes
\&
\& $stream = Crypt::Stream::Rabbit\->new($key);
\& #BEWARE: this is different from new($key, "")
.Ve
.SS crypt
.IX Subsection "crypt"
.Vb 3
\& $ciphertext = $stream\->crypt($plaintext);
\& #or
\& $plaintext = $stream\->crypt($ciphertext);
.Ve
.SS keystream
.IX Subsection "keystream"
.Vb 1
\& $random_key = $stream\->keystream($length);
.Ve
.SS clone
.IX Subsection "clone"
.Vb 1
\& $stream\->clone();
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.IP \(bu 4
Crypt::Stream::RC4, Crypt::Stream::ChaCha, Crypt::Stream::Salsa20, Crypt::Stream::Sober128
.IP \(bu 4
<https://en.wikipedia.org/wiki/Rabbit_(cipher)>
