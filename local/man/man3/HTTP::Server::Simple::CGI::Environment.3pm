.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "HTTP::Server::Simple::CGI::Environment 3pm"
.TH HTTP::Server::Simple::CGI::Environment 3pm 2015-12-04 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
HTTP::Server::Simple::CGI::Environment \- a HTTP::Server::Simple mixin to provide the CGI protocol
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This mixin abstracts the CGI protocol out from
HTTP::Server::Simple::CGI so that it's easier to provide your own
CGI handlers with HTTP::Server::Simple which \fBdon't\fR use CGI.pm
.SS setup_environment
.IX Subsection "setup_environment"
\&\f(CW\*(C`setup_environemnt\*(C'\fR is usually called in the superclass's accept_hook
.PP
This routine in this sub-class clears the environment to the
start-up state.
.SS setup_server_url
.IX Subsection "setup_server_url"
Sets up the \f(CW\*(C`SERVER_URL\*(C'\fR environment variable
.SS setup_environment_from_metadata
.IX Subsection "setup_environment_from_metadata"
This method sets up CGI environment variables based on various
meta-headers, like the protocol, remote host name, request path, etc.
.PP
See the docs in HTTP::Server::Simple for more detail.
.SS header
.IX Subsection "header"
\&\f(CW\*(C`header\*(C'\fR turns a single HTTP headers into CGI environment variables.
