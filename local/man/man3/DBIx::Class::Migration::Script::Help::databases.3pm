.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "DBIx::Class::Migration::Script::Help::databases 3pm"
.TH DBIx::Class::Migration::Script::Help::databases 3pm 2020-06-02 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
DBIx::Class::Migration::Script::Help::databases \- Which databases are we building migrations for?
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\&    dbic\-migration prepare \-\-databases SQLite \-\-databases mysql
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
.IP Aliases 4
.IX Item "Aliases"
database
.IP Value 4
.IX Item "Value"
Str or Array of Str (default: SQLite)
.PP
Used when building "migration"" in "DBIx::Class::Migration::Script to define the target
databases we are building migration files for.  You can name any of the databases
currently supported by SQL::Translator.  If you leave this undefined we will derive a value
based on the value of "dsn" in DBIx::Class::Migration::Script.  For example, if your
"dsn" in DBIx::Class::Migration::Script is "DBI:SQLite:test.db", we will set
the value of "databases" in DBIx::Class::Migration::Script to \f(CW\*(C`[\*(AqSQLite\*(Aq]\*(C'\fR.
.PP
You can prepare deployment for any database type that SQL::Translator understand.  By
default we only prepare a deployment version for the database which matches
the "dsn" in DBIx::Class::Migration::Script you specified but you can use this
to prepare additional deployments
.PP
.Vb 1
\&    dbic\-migration prepare \-\-database SQLite \-\-database MySQL \-\-PostgreSQL
.Ve
.PP
Please note if you choose to manually set this value, you won't automatically
get the default or inferred database, you'll need to specify all the SQLT
database types you wish.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
DBIx::Class::Migration, DBIx::Class::Migration::Script,
DBIx::Class::Migration::Features, DBIx::Class::Migration::Tutorial
.SH AUTHOR
.IX Header "AUTHOR"
See DBIx::Class::Migration for author information
.SH "COPYRIGHT & LICENSE"
.IX Header "COPYRIGHT & LICENSE"
See DBIx::Class::Migration for copyright and license information
