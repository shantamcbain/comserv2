.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Path::IsDev::Role::Matcher::FullPath::Is::Any 3pm"
.TH Path::IsDev::Role::Matcher::FullPath::Is::Any 3pm 2017-03-09 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Path::IsDev::Role::Matcher::FullPath::Is::Any \- Match if the current directory is the same directory from a list of absolute paths.
.SH VERSION
.IX Header "VERSION"
version 1.001003
.SH METHODS
.IX Header "METHODS"
.ie n .SS """fullpath_is_any"""
.el .SS \f(CWfullpath_is_any\fP
.IX Subsection "fullpath_is_any"
Note, this is usually invoked on directories anyway.
.PP
.Vb 1
\&    if ( $self\->fullpath_is_any( $result_object, \*(Aq/usr/\*(Aq, \*(Aq/usr/bin/foo\*(Aq )) {
\&
\&    }
.Ve
.PP
Matches if any of the provided paths \f(CW\*(C`realpath\*(C'\fR's correspond to \f(CW\*(C`$result_object\->path\->realpath\*(C'\fR
.SH "PRIVATE METHODS"
.IX Header "PRIVATE METHODS"
.ie n .SS """_fullpath_is"""
.el .SS \f(CW_fullpath_is\fP
.IX Subsection "_fullpath_is"
.Vb 1
\&    $class\->_fullpath_is( $result_object, $source_path, $comparison_path );
.Ve
.PP
Does not match if \f(CW$comparison_path\fR does not exist.
.PP
Otherwise, compare \f(CW$source_path\fR vs \f(CW\*(C`$comparison_path\->realpath\*(C'\fR, and return if they match.
.SH AUTHOR
.IX Header "AUTHOR"
Kent Fredric <kentnl@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2017 by Kent Fredric <kentfredric@gmail.com>.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
