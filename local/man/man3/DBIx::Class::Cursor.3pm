.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "DBIx::Class::Cursor 3pm"
.TH DBIx::Class::Cursor 3pm 2018-04-30 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
DBIx::Class::Cursor \- Abstract object representing a query cursor on a
resultset.
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\&  my $cursor = $schema\->resultset(\*(AqCD\*(Aq)\->cursor();
\&
\&  # raw values off the database handle in resultset columns/select order
\&  my @next_cd_column_values = $cursor\->next;
\&
\&  # list of all raw values as arrayrefs
\&  my @all_cds_column_values = $cursor\->all;
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
A Cursor represents a query cursor on a DBIx::Class::ResultSet object. It
allows for traversing the result set with "next", retrieving all results with
"all" and resetting the cursor with "reset".
.PP
Usually, you would use the cursor methods built into DBIx::Class::ResultSet
to traverse it. See "next" in DBIx::Class::ResultSet,
"reset" in DBIx::Class::ResultSet and "all" in DBIx::Class::ResultSet for more
information.
.SH METHODS
.IX Header "METHODS"
.SS new
.IX Subsection "new"
Virtual method. Returns a new DBIx::Class::Cursor object.
.SS next
.IX Subsection "next"
Virtual method. Advances the cursor to the next row. Returns an array of
column values (the result of "fetchrow_array" in DBI method).
.SS reset
.IX Subsection "reset"
Virtual method. Resets the cursor to the beginning.
.SS all
.IX Subsection "all"
Virtual method. Returns all rows in the DBIx::Class::ResultSet.
.SH "FURTHER QUESTIONS?"
.IX Header "FURTHER QUESTIONS?"
Check the list of additional DBIC resources.
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This module is free software copyright
by the DBIx::Class (DBIC) authors. You can
redistribute it and/or modify it under the same terms as the
DBIx::Class library.
