.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "UNIVERSAL::isa 3pm"
.TH UNIVERSAL::isa 3pm 2017-10-12 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
UNIVERSAL::isa \- Attempt to recover from people calling UNIVERSAL::isa as a function
.SH VERSION
.IX Header "VERSION"
version 1.20171012
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 2
\&    # from the shell
\&    echo \*(Aqexport PERL5OPT=\-MUNIVERSAL::isa\*(Aq >> /etc/profile
\&
\&    # within your program
\&    use UNIVERSAL::isa;
\&
\&    # enable warnings for all dodgy uses of UNIVERSAL::isa
\&    use UNIVERSAL::isa \*(Aqverbose\*(Aq;
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
Whenever you use "isa" in UNIVERSAL as a function, a kitten using
Test::MockObject dies. Normally, the kittens would be helpless, but if they
use UNIVERSAL::isa (the module whose docs you are reading), the kittens can
live long and prosper.
.PP
This module replaces \f(CW\*(C`UNIVERSAL::isa\*(C'\fR with a version that makes sure that,
when called as a function on objects which override \f(CW\*(C`isa\*(C'\fR, \f(CW\*(C`isa\*(C'\fR will call
the appropriate method on those objects
.PP
In all other cases, the real \f(CW\*(C`UNIVERSAL::isa\*(C'\fR gets called directly.
.PP
\&\fBNOTE:\fR You should use this module only for debugging purposes. It does not
belong as a dependency in running code.
.SH FUNCTIONS
.IX Header "FUNCTIONS"
.SS original_isa
.IX Subsection "original_isa"
This sub contains the definition of the \fIoriginal\fR \f(CW\*(C`UNIVERSAL::isa\*(C'\fR
definition, in case you need it.
.SH WARNINGS
.IX Header "WARNINGS"
If the lexical warnings pragma is available, this module will emit a warning
for each naughty invocation of \f(CW\*(C`UNIVERSAL::isa\*(C'\fR. Silence these warnings by
saying:
.PP
.Vb 1
\&    no warnings \*(AqUNIVERSAL::isa\*(Aq;
.Ve
.PP
in the lexical scope of the naughty code.
.PP
After version 1.00, warnings only appear when naughty code calls
\&\fBUNIVERSAL::isa()\fR as a function on an invocant for which there is an overridden
\&\fBisa()\fR.  These are really truly \fIactive\fR bugs, and you should fix them rather
than relying on this module to find them.
.PP
To get warnings for all potentially dangerous uses of \fBUNIVERSAL::isa()\fR as a
function, not a method (that is, for \fIall\fR uses of the method as a function,
which are latent bugs, if not bugs that will break your code as it exists now),
pass the \f(CW\*(C`verbose\*(C'\fR flag when using the module.  This can generate many extra
warnings, but they're more specific as to the actual wrong practice and they
usually suggest proper fixes.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Perl::Critic::Policy::BuiltinFunctions::ProhibitUniversalIsa
.PP
UNIVERSAL::can for another discussion of the problem at hand.
.PP
Test::MockObject for one example of a module that really needs to override
\&\f(CWisa()\fR.
.PP
Any decent explanation of OO to understand why calling methods as functions is
a staggeringly bad idea.
.SH SUPPORT
.IX Header "SUPPORT"
Bugs may be submitted through the RT bug tracker <https://rt.cpan.org/Public/Dist/Display.html?Name=UNIVERSAL-isa>
(or bug\-UNIVERSAL\-isa@rt.cpan.org <mailto:bug-UNIVERSAL-isa@rt.cpan.org>).
.SH AUTHORS
.IX Header "AUTHORS"
.IP \(bu 4
Audrey Tang <cpan@audreyt.org>
.IP \(bu 4
chromatic <chromatic@wgz.org>
.IP \(bu 4
יובל קוג'מן (Yuval Kogman) <nothingmuch@woobling.org>
.SH CONTRIBUTORS
.IX Header "CONTRIBUTORS"
.IP \(bu 4
Karen Etheridge <ether@cpan.org>
.IP \(bu 4
Graham Knop <haarg@haarg.org>
.IP \(bu 4
Ricardo Signes <rjbs@cpan.org>
.SH "COPYRIGHT AND LICENCE"
.IX Header "COPYRIGHT AND LICENCE"
This software is copyright (c) 2011 by chromatic@wgz.org.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
