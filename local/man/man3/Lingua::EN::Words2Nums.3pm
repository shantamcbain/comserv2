.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Words2Nums 3pm"
.TH Words2Nums 3pm 2008-12-16 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Lingua::EN::Words2Nums \- convert English text to numbers
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 4
\& use Lingua::EN::Words2Nums;
\& $num=words2nums("two thousand and one");
\& $num=words2nums("twenty\-second");
\& $num=words2nums("15 billion, 6 million, and ninteen");
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This module converts English text into numbers. It supports both ordinal and
cardinal numbers, negative numbers, and very large numbers.
.PP
The main subroutine, which is exported by default, is \fBwords2nums()\fR. This
subroutine, when fed a string, will attempt to convert it into a number.
If it succeeds, the number will be returned. If it fails, it returns undef.
.SH VARIABLES
.IX Header "VARIABLES"
There are a number of variables that can be used to tweak the behavior of this
module. For example, debugging can be be enabled by setting
\&\f(CW$Lingua::EN::Words2Nums::debug\fR=1
.ie n .IP $Lingua::EN::Words2Nums::debug 4
.el .IP \f(CW$Lingua::EN::Words2Nums::debug\fR 4
.IX Item "$Lingua::EN::Words2Nums::debug"
Default: 0. If set to a true value, outputs on standard error some useful
messages if parsing fails for some reason.
.ie n .IP $Lingua::EN::Words2Nums::billion 4
.el .IP \f(CW$Lingua::EN::Words2Nums::billion\fR 4
.IX Item "$Lingua::EN::Words2Nums::billion"
Default: 10 ** 9. This is the number that will be returned for "one billion".
It defaults to the American version; the English will want to set it to
10 ** 12. Setting this number automatically changes all the larger numbers
(trillion, quadrillion, etc) to match.
.SH NOTES
.IX Header "NOTES"
It does not understand decimals or fractions, yet.
.PP
Scores are supported, eg: "four score and ten". So are dozens. So is a baker's
dozen. And a gross.
.PP
Various mispellings of numbers are understood.
.PP
While it handles googol correctly, googolplex is too large to fit in perl's
standard scalar type, and "inf" will be returned.
.SH AUTHOR
.IX Header "AUTHOR"
Copyright 2001\-2003 Joey Hess <joey@kitenet.net>
.PP
This module is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.
