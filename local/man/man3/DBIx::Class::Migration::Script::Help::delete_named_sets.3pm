.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "DBIx::Class::Migration::Script::Help::delete_named_sets 3pm"
.TH DBIx::Class::Migration::Script::Help::delete_named_sets 3pm 2020-06-02 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
DBIx::Class::Migration::Script::Help::delete_named_sets \- Delete dumped fixture sets
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 2
\&    dbic\-migration \-\-schema_class MyApp::Schema \e
\&      delete_named_sets \-\-fixture_set core \-\-fixture_set countries
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
Used to delete invalid, previously dumped fixtures for a given fixture
configuration, under the current schema (not database!) version.
.PP
Sometimes when you are dumping fixtures for the current version, you might
make a mistake in the configuration set and want to re-dump them.  This
command clears out existing sets.
.PP
Since dumped fixtures just live on the filesystem, you can delete them using
any normal filesystem tool, so we limit this pontentially dangerous command
to deleting on the current schema fixtures.  You might use this command when
working on prepping fixures for a new version of the schema, for example.
.SH OPTIONS
.IX Header "OPTIONS"
This command accepts the following options.  You may learn more about each
option by typing \f(CW\*(C`dbic\-migration help OPTION\*(C'\fR.  The following is a summary.
.SH "fixture_sets (fixture_sets)"
.IX Header "fixture_sets (fixture_sets)"
Required.  The fixture configuration set names (basically these are the file
names of your fixture configurations, without the '.json' part.
.SS "includes (I,lib,libs,include)"
.IX Subsection "includes (I,lib,libs,include)"
Optional.
.PP
Adds the listed paths to \f(CW@INC\fR.  Handy during development when you want to use
a development schema class.
.SS "schema_class (S)"
.IX Subsection "schema_class (S)"
Accepts Str. Required.
.PP
This is the schema we use as the basis for creating, managing and running your
deployments.  This should be the full package namespace defining your subclass
of DBIx::Class::Schema.  For example \f(CW\*(C`MyApp::Schema\*(C'\fR.
.PP
If the "schema_class" cannot be loaded, a hard exception will be thrown.
.SS "target_dir (D)"
.IX Subsection "target_dir (D)"
Optional.
.PP
When using a \f(CW\*(C`sandbox_class\*(C'\fR for generating developer level database sandboxes,
you may wish to place the sandbox in a directory other than the default (which
is under the \f(CW\*(C`share\*(C'\fR directory off the project root).
.SS dbic_fixture_class
.IX Subsection "dbic_fixture_class"
Accepts: String to a Perl Class.  Defaults to DBIx::Class::Fixtures
.PP
Lets you specify a fixture class.
.SS dbic_fixtures_extra_args
.IX Subsection "dbic_fixtures_extra_args"
Accepts: HashRef.  Optional
.PP
Allows you to pass custom arguments to DBIx::Class::Fixtures.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
DBIx::Class::Migration, DBIx::Class::Migration::Script,
DBIx::Class::Migration::Features, DBIx::Class::Migration::Tutorial
.SH AUTHOR
.IX Header "AUTHOR"
See DBIx::Class::Migration for author information
.SH "COPYRIGHT & LICENSE"
.IX Header "COPYRIGHT & LICENSE"
See DBIx::Class::Migration for copyright and license information
