.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Catalyst::TraitFor::Model::DBIC::Schema::Caching 3pm"
.TH Catalyst::TraitFor::Model::DBIC::Schema::Caching 3pm 2023-07-30 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Catalyst::TraitFor::Model::DBIC::Schema::Caching \- Query caching support for
Catalyst::Model::DBIC::Schema
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 5
\&    _\|_PACKAGE_\|_\->config({
\&        traits => [\*(AqCaching\*(Aq],
\&        connect_info => 
\&            [\*(Aqdbi:mysql:db\*(Aq, \*(Aquser\*(Aq, \*(Aqpass\*(Aq],
\&    });
\&
\&    $c\->model(\*(AqDB::Table\*(Aq)\->search({ foo => \*(Aqbar\*(Aq }, { cache_for => 18000 });
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
Enable caching support using DBIx::Class::Cursor::Cached and
Catalyst::Plugin::Cache.
.PP
In order for this to work, Catalyst::Plugin::Cache must be configured and
loaded. A possible configuration would look like this:
.PP
.Vb 7
\&  <Plugin::Cache>
\&    <backend>       
\&      class Cache::FastMmap
\&      unlink_on_exit 1
\&      share_file /tmp/myapp_share
\&    </backend>
\&  </Plugin::Cache>
.Ve
.PP
Then in your queries, set the \f(CW\*(C`cache_for\*(C'\fR ResultSet attribute to the number of
seconds you want the query results to be cached for, eg.:
.PP
.Vb 1
\&  $c\->model(\*(AqDB::Table\*(Aq)\->search({ foo => \*(Aqbar\*(Aq }, { cache_for => 18000 });
.Ve
.SH "CONFIG PARAMETERS"
.IX Header "CONFIG PARAMETERS"
.SS caching
.IX Subsection "caching"
Turn caching on or off, you can use:
.PP
.Vb 1
\&    $c\->model(\*(AqDB\*(Aq)\->caching(0);
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Catalyst::Model::DBIC::Schema, DBIx::Class, Catalyst::Plugin::Cache,
Cache::FastMmap, DBIx::Class::Cursor::Cached
.SH AUTHOR
.IX Header "AUTHOR"
See "AUTHOR" in Catalyst::Model::DBIC::Schema and
"CONTRIBUTORS" in Catalyst::Model::DBIC::Schema.
.SH COPYRIGHT
.IX Header "COPYRIGHT"
See "COPYRIGHT" in Catalyst::Model::DBIC::Schema.
.SH LICENSE
.IX Header "LICENSE"
This program is free software, you can redistribute it and/or modify it
under the same terms as Perl itself.
