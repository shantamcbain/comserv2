.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "POD2::JA::Text::LineFold 3pm"
.TH POD2::JA::Text::LineFold 3pm 2017-04-11 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Text::LineFold~[ja] \- プレインテキストの行折り
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 2
\&    use Text::LineFold;
\&    $lf = Text::LineFold\->new();
\&    
\&    # 行折りする
\&    $folded = $lf\->fold($string, \*(AqPLAIN\*(Aq);
\&    $indented = $lf\->fold(\*(Aq \*(Aq x 8, \*(Aq \*(Aq x 4, $string);
\&
\&    # 行折りを戻す
\&    $unfolded = $lf\->unfold($string, \*(AqFIXED\*(Aq);
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
Text::LineFold は、プレインテキストの行折りをしたり行折りを戻したりする。
電子メールメッセージを主眼に置いており、RFC 3676 の flowed 形式にも対応する。
.SS 公開インタフェース
.IX Subsection "公開インタフェース"
.IP "new ([KEY => VALUE, ...])" 4
.IX Item "new ([KEY => VALUE, ...])"
\&\fIコンストラクタ\fR。
KEY => VALUE の対については config メソッドを参照。
.ie n .IP "$self\->config (KEY)" 4
.el .IP "\f(CW$self\fR\->config (KEY)" 4
.IX Item "$self->config (KEY)"
.PD 0
.ie n .IP "$self\->config ([KEY => VAL, ...])" 4
.el .IP "\f(CW$self\fR\->config ([KEY => VAL, ...])" 4
.IX Item "$self->config ([KEY => VAL, ...])"
.PD
\&\fIインスタンスメソッド\fR。
設定を取得または更新する。以下の KEY => VALUE 対を指定できる。
.RS 4
.IP "Charset => CHARSET" 4
.IX Item "Charset => CHARSET"
入力文字列を符号化しているキャラクタセット。
文字列または MIME::Charset~[ja] オブジェクト。
初期値は \f(CW"UTF\-8"\fR。
.IP "Language => LANGUAGE" 4
.IX Item "Language => LANGUAGE"
Charset オプションとともに、言語/地域の文脈を決めるのに使える。
初期値は \f(CW"XX"\fR。
"Context" in Unicode::LineBreak~[ja] オプションも参照。
.IP "Newline => STRING" 4
.IX Item "Newline => STRING"
改行の文字列。
初期値は \f(CW"\en"\fR。
.IP "OutputCharset => CHARSET" 4
.IX Item "OutputCharset => CHARSET"
\&\fBfold()\fR/\fBunfold()\fR の結果を符号化するキャラクタセット。
文字列または MIME::Charset~[ja] オブジェクト。
特殊値 \f(CW"_UNICODE_"\fR を指定すると、結果は Unicode 文字列となる。
初期値は Charset オプションの値。
.IP "TabSize => NUMBER" 4
.IX Item "TabSize => NUMBER"
タブストップの桁数。
0 を指定すると、タブストップを無視する。
初期値は 8。
.IP BreakIndent 4
.IX Item "BreakIndent"
.PD 0
.IP CharMax 4
.IX Item "CharMax"
.IP ColMax 4
.IX Item "ColMax"
.IP ColMin 4
.IX Item "ColMin"
.IP ComplexBreaking 4
.IX Item "ComplexBreaking"
.IP EAWidth 4
.IX Item "EAWidth"
.IP HangulAsAL 4
.IX Item "HangulAsAL"
.IP LBClass 4
.IX Item "LBClass"
.IP LegacyCM 4
.IX Item "LegacyCM"
.IP Prep 4
.IX Item "Prep"
.IP Urgent 4
.IX Item "Urgent"
.PD
"オプション" in Unicode::LineBreak~[ja] を参照。
.RE
.RS 4
.RE
.ie n .IP "$self\->fold (STRING, [METHOD])" 4
.el .IP "\f(CW$self\fR\->fold (STRING, [METHOD])" 4
.IX Item "$self->fold (STRING, [METHOD])"
.PD 0
.ie n .IP "$self\->fold (INITIAL_TAB, SUBSEQUENT_TAB, STRING, ...)" 4
.el .IP "\f(CW$self\fR\->fold (INITIAL_TAB, SUBSEQUENT_TAB, STRING, ...)" 4
.IX Item "$self->fold (INITIAL_TAB, SUBSEQUENT_TAB, STRING, ...)"
.PD
\&\fIインスタンスメソッド\fR。
文字列 STRING を行折りする。
行末の余分な空白文字や水平タブ文字を除去し、
改行の文字列を Newline オプションで指定したものに置き換え、
テキスト末尾に改行がなければ追加する。
水平タブ文字は TabSize オプションによる幅のタブストップと見なす。
.Sp
ひとつめの形式では、METHOD 引数に以下のオプションを指定できる。
.RS 4
.ie n .IP """FIXED""" 4
.el .IP "\f(CW""FIXED""\fR" 4
.IX Item """FIXED"""
\&\f(CW">"\fR で始まる行は行折りしない。
段落は空行で分かたれる。
.ie n .IP """FLOWED""" 4
.el .IP "\f(CW""FLOWED""\fR" 4
.IX Item """FLOWED"""
RFC 3676 で定義される \f(CW"Format=Flowed; DelSp=Yes"\fR 形式。
.ie n .IP """PLAIN""" 4
.el .IP "\f(CW""PLAIN""\fR" 4
.IX Item """PLAIN"""
初期の方法。すべての行を行折りする。
.RE
.RS 4
.Sp
ふたつめの形式は、"\fBwrap()\fR" in Text::Wrap に似ている。
すべての行を行折りする。段落の先頭には INITIAL_TAB を、ほかの行の先頭には SUBSEQUENT_TAB を挿入する。
.RE
.ie n .IP "$self\->unfold (STRING, METHOD)" 4
.el .IP "\f(CW$self\fR\->unfold (STRING, METHOD)" 4
.IX Item "$self->unfold (STRING, METHOD)"
文字列 STRING の行折りされた段落をつなぎ直してそれを返す。
.Sp
METHOD 引数には以下のオプションを指定できる。
.RS 4
.ie n .IP """FIXED""" 4
.el .IP "\f(CW""FIXED""\fR" 4
.IX Item """FIXED"""
初期の方法。
\&\f(CW">"\fR で始まる行はつなぎ直さない。
空行を段落の区切りとみなす。
.ie n .IP """FLOWED""" 4
.el .IP "\f(CW""FLOWED""\fR" 4
.IX Item """FLOWED"""
RFC 3676 で定義される \f(CW"Format=Flowed; DelSp=Yes"\fR 形式をつなぎ直す。
.ie n .IP """FLOWEDSP""" 4
.el .IP "\f(CW""FLOWEDSP""\fR" 4
.IX Item """FLOWEDSP"""
RFC 3676 で定義される \f(CW"Format=Flowed; DelSp=No"\fR 形式をつなぎ直す。
.RE
.RS 4
.RE
.SH BUGS
.IX Header "BUGS"
バグやバグのような動作は開発者に教えてください。
.PP
CPAN Request Tracker:
<http://rt.cpan.org/Public/Dist/Display.html?Name=Unicode\-LineBreak>.
.SH VERSION
.IX Header "VERSION"
\&\f(CW$VERSION\fR 変数を見てほしい。
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Unicode::LineBreak~[ja],
Text::Wrap.
.SH AUTHOR
.IX Header "AUTHOR"
Copyright (C) 2009\-2012 Hatuka*nezumi \- IKEDA Soji <hatuka(at)nezumi.nu>.
.PP
This program is free software; you can redistribute it and/or modify it 
under the same terms as Perl itself.
