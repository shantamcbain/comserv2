.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Moose::Object 3pm"
.TH Moose::Object 3pm 2024-01-21 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Moose::Object \- The base object for Moose
.SH VERSION
.IX Header "VERSION"
version 2.2207
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This class is the default base class for all Moose-using classes. When
you \f(CW\*(C`use Moose\*(C'\fR in this class, your class will inherit from this
class.
.PP
It provides a default constructor and destructor, which run all of the
\&\f(CW\*(C`BUILD\*(C'\fR and \f(CW\*(C`DEMOLISH\*(C'\fR methods in the inheritance hierarchy,
respectively.
.PP
You don't actually \fIneed\fR to inherit from this in order to use Moose,
but it makes it easier to take advantage of all of Moose's features.
.SH METHODS
.IX Header "METHODS"
.SS Moose::Object\->new(%params|$params)
.IX Subsection "Moose::Object->new(%params|$params)"
This method calls \f(CW\*(C`$class\->BUILDARGS(@_)\*(C'\fR, and then creates a new
instance of the appropriate class. Once the instance is created, it
calls \f(CW\*(C`$instance\->BUILD($params)\*(C'\fR for each \f(CW\*(C`BUILD\*(C'\fR method in the
inheritance hierarchy.
.SS Moose::Object\->BUILDARGS(%params|$params)
.IX Subsection "Moose::Object->BUILDARGS(%params|$params)"
The default implementation of this method accepts a hash or hash
reference of named parameters. If it receives a single argument that
\&\fIisn't\fR a hash reference it throws an error.
.PP
You can override this method in your class to handle other types of
options passed to the constructor.
.PP
This method should always return a hash reference of named options.
.ie n .SS $object\->does($role_name)
.el .SS \f(CW$object\fP\->does($role_name)
.IX Subsection "$object->does($role_name)"
This returns true if the object does the given role.
.ie n .SS $object\->DOES($class_or_role_name)
.el .SS \f(CW$object\fP\->DOES($class_or_role_name)
.IX Subsection "$object->DOES($class_or_role_name)"
This is a Moose role-aware implementation of "DOES" in UNIVERSAL.
.PP
This is effectively the same as writing:
.PP
.Vb 1
\&  $object\->does($name) || $object\->isa($name)
.Ve
.PP
This method will work with Perl 5.8, which did not implement
\&\f(CW\*(C`UNIVERSAL::DOES\*(C'\fR.
.ie n .SS $object\->dump($maxdepth)
.el .SS \f(CW$object\fP\->dump($maxdepth)
.IX Subsection "$object->dump($maxdepth)"
This is a handy utility for Data::Dumpering an object. By default,
there is no maximum depth.
.ie n .SS $object\->DESTROY
.el .SS \f(CW$object\fP\->DESTROY
.IX Subsection "$object->DESTROY"
A default destructor is provided, which calls
\&\f(CW\*(C`$instance\->DEMOLISH($in_global_destruction)\*(C'\fR for each \f(CW\*(C`DEMOLISH\*(C'\fR
method in the inheritance hierarchy.
.SH BUGS
.IX Header "BUGS"
See "BUGS" in Moose for details on reporting bugs.
.SH AUTHORS
.IX Header "AUTHORS"
.IP \(bu 4
Stevan Little <stevan@cpan.org>
.IP \(bu 4
Dave Rolsky <autarch@urth.org>
.IP \(bu 4
Jesse Luehrs <doy@cpan.org>
.IP \(bu 4
Shawn M Moore <sartak@cpan.org>
.IP \(bu 4
יובל קוג'מן (Yuval Kogman) <nothingmuch@woobling.org>
.IP \(bu 4
Karen Etheridge <ether@cpan.org>
.IP \(bu 4
Florian Ragwitz <rafl@debian.org>
.IP \(bu 4
Hans Dieter Pearcey <hdp@cpan.org>
.IP \(bu 4
Chris Prather <chris@prather.org>
.IP \(bu 4
Matt S Trout <mstrout@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2006 by Infinity Interactive, Inc.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
