.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "DBIx::Class::Storage::Statistics 3pm"
.TH DBIx::Class::Storage::Statistics 3pm 2022-05-15 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
DBIx::Class::Storage::Statistics \- SQL Statistics
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This class is called by DBIx::Class::Storage::DBI as a means of collecting
statistics on its actions.  Using this class alone merely prints the SQL
executed, the fact that it completes and begin/end notification for
transactions.
.PP
To really use this class you should subclass it and create your own method
for collecting the statistics as discussed in DBIx::Class::Manual::Cookbook.
.SH METHODS
.IX Header "METHODS"
.SS new
.IX Subsection "new"
Returns a new DBIx::Class::Storage::Statistics object.
.SS debugfh
.IX Subsection "debugfh"
Sets or retrieves the filehandle used for trace/debug output.  This should
be an IO::Handle compatible object (only the
print method is used). By
default it is initially set to STDERR \- although see discussion of the
DBIC_TRACE environment variable.
.PP
Invoked as a getter it will lazily open a filehandle and set it to
autoflush (if one is not
already set).
.SS print
.IX Subsection "print"
Prints the specified string to our debugging filehandle.  Provided to save our
methods the worry of how to display the message.
.SS silence
.IX Subsection "silence"
Turn off all output if set to true.
.SS txn_begin
.IX Subsection "txn_begin"
Called when a transaction begins.
.SS txn_rollback
.IX Subsection "txn_rollback"
Called when a transaction is rolled back.
.SS txn_commit
.IX Subsection "txn_commit"
Called when a transaction is committed.
.SS svp_begin
.IX Subsection "svp_begin"
Called when a savepoint is created.
.SS svp_release
.IX Subsection "svp_release"
Called when a savepoint is released.
.SS svp_rollback
.IX Subsection "svp_rollback"
Called when rolling back to a savepoint.
.SS query_start
.IX Subsection "query_start"
Called before a query is executed.  The first argument is the SQL string being
executed and subsequent arguments are the parameters used for the query.
.SS query_end
.IX Subsection "query_end"
Called when a query finishes executing.  Has the same arguments as query_start.
.SH "FURTHER QUESTIONS?"
.IX Header "FURTHER QUESTIONS?"
Check the list of additional DBIC resources.
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This module is free software copyright
by the DBIx::Class (DBIC) authors. You can
redistribute it and/or modify it under the same terms as the
DBIx::Class library.
