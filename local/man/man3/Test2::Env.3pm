.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Test2::Env 3pm"
.TH Test2::Env 3pm 2025-01-22 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Test2::Env \- Documentation for environment variables used or set by Test2.
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This is a list of environment variables that are either set by, or read by Test2.
.SH AUTHOR_TESTING
.IX Header "AUTHOR_TESTING"
This env var is read by Test2. When set Test2 will run tests that are normally
skipped unless a module author is doing extra author-specific testing.
.SH AUTOMATED_TESTING
.IX Header "AUTOMATED_TESTING"
This env var is read by Test2. When set this indicates the tests are run by an
automated system and no human interaction is possible.
.PP
See Test2::Require::AuthorTesting.
.SH EXTENDED_TESTING
.IX Header "EXTENDED_TESTING"
This env var is read by Test2. When set it indicates some extended testing that
should normally be skipped will be run.
.PP
See Test2::Require::ExtendedTesting.
.SH HARNESS_ACTIVE
.IX Header "HARNESS_ACTIVE"
This env var is read by Test2. It is usually set by \f(CW\*(C`prove\*(C'\fR (Test::Harness)
or \f(CW\*(C`yath\*(C'\fR (App::Yath).
.SH NONINTERACTIVE_TESTING
.IX Header "NONINTERACTIVE_TESTING"
This env var is read by Test2. When set this indicates the testing will not be
interactive.
.PP
See Test2::Require::NonInteractiveTesting.
.SH RELEASE_TESTING
.IX Header "RELEASE_TESTING"
This env var is read by Test2. When set this indicates that release testing is
being done, which may run more tests than normal.
.PP
See Test2::Require::ReleaseTesting.
.SH T2_FORMATTER
.IX Header "T2_FORMATTER"
This can be used to set the formatter that Test2 will use. If set to a string
without a '+' prefix, then 'Test2::Formatter::' will be added to the start of
the module name. If '+' is present it will be stripped and no further
modification will be made to the module name.
.SH T2_IN_PRELOAD
.IX Header "T2_IN_PRELOAD"
Test2 sets this when preload mode is active. This is mainly used by
App::Yath and similar tools that preload Test2, then fork to run tests.
.SH TABLE_TERM_SIZE
.IX Header "TABLE_TERM_SIZE"
This is used to set a terminal width for things like diagnostic message tables.
.SH TEST2_ACTIVE
.IX Header "TEST2_ACTIVE"
Test2 sets this variable when tests are running.
.SH TEST2_ENABLE_PLUGINS
.IX Header "TEST2_ENABLE_PLUGINS"
This can be used to force plugins to be loaded whent he Test2 API is loaded. It
takes a list of one or more plugin names seperated by comma. If the module name
does not have a '+' in front of it then the \f(CW\*(C`Test2::Plugin::\*(C'\fR namespace is
assumed and added. If a '+' is present at the start of a module name it will be
stripped and no further modification will be made.
.PP
Examples:
.PP
.Vb 2
\&    TEST2_ENABLE_PLUGINS=BailOnFail
\&    Test2_ENABLE_PLUGINS=SRand,+My::Plugin::Name
.Ve
.SH TEST_ACTIVE
.IX Header "TEST_ACTIVE"
Set by Test2 when tests are running.
.SH TS_MAX_DELTA
.IX Header "TS_MAX_DELTA"
Used to determine how many max lines of output will be provided when \fBis()\fR finds
a deep data strucgture mismatch.
.SH SOURCE
.IX Header "SOURCE"
The source code repository for Test2\-Suite can be found at
\&\fIhttps://github.com/Test\-More/test\-more/\fR.
.SH MAINTAINERS
.IX Header "MAINTAINERS"
.IP "Chad Granum <exodist@cpan.org>" 4
.IX Item "Chad Granum <exodist@cpan.org>"
.SH AUTHORS
.IX Header "AUTHORS"
.PD 0
.IP "Chad Granum <exodist@cpan.org>" 4
.IX Item "Chad Granum <exodist@cpan.org>"
.PD
.SH COPYRIGHT
.IX Header "COPYRIGHT"
Copyright Chad Granum <exodist@cpan.org>.
.PP
This program is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.
.PP
See \fIhttp://dev.perl.org/licenses/\fR
