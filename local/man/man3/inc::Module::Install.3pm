.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "inc::Module::Install 3pm"
.TH inc::Module::Install 3pm 2023-04-27 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
inc::Module::Install \- Module::Install configuration system
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\&  use inc::Module::Install;
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This module first checks whether the \fIinc/.author\fR directory exists,
and removes the whole \fIinc/\fR directory if it does, so the module author
always get a fresh \fIinc\fR every time they run \fIMakefile.PL\fR.  Next, it
unshifts \f(CW\*(C`inc\*(C'\fR into \f(CW@INC\fR, then loads \fBModule::Install\fR from there.
.PP
Below is an explanation of the reason for using a \fIloader module\fR:
.PP
The original implementation of \fBCPAN::MakeMaker\fR introduces subtle
problems for distributions ending with \f(CW\*(C`CPAN\*(C'\fR (e.g. \fBCPAN.pm\fR,
\&\fBWAIT::Format::CPAN\fR), because its placement in \fI./CPAN/\fR duplicates
the real libraries that will get installed; also, the directory name
\&\fI./CPAN/\fR may confuse users.
.PP
On the other hand, putting included, for-build-time-only libraries in
\&\fI./inc/\fR is a normal practice, and there is little chance that a
CPAN distribution will be called \f(CW\*(C`Something::inc\*(C'\fR, so it's much safer
to use.
.PP
Also, it allows for other helper modules like \fBModule::AutoInstall\fR
to reside also in \fIinc/\fR, and to make use of them.
.SH AUTHORS
.IX Header "AUTHORS"
Audrey Tang <autrijus@autrijus.org>
.SH COPYRIGHT
.IX Header "COPYRIGHT"
Copyright 2003, 2004 Audrey Tang <autrijus@autrijus.org>.
.PP
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
.PP
See <http://www.perl.com/perl/misc/Artistic.html>
