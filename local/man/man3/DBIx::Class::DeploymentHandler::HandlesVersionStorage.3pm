.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "DBIx::Class::DeploymentHandler::HandlesVersionStorage 3pm"
.TH DBIx::Class::DeploymentHandler::HandlesVersionStorage 3pm 2024-07-17 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
DBIx::Class::DeploymentHandler::HandlesVersionStorage \- Interface for version storage methods
.SH DESCRIPTION
.IX Header "DESCRIPTION"
Typically VersionStorages will be implemented with a simple
DBIx::Class::Result.  Take a look at the
two existing implementations for examples of what you
might want to do in your own storage.
.SH "KNOWN IMPLEMENTATIONS"
.IX Header "KNOWN IMPLEMENTATIONS"
.IP \(bu 4
DBIx::Class::DeploymentHandler::VersionStorage::Standard
.IP \(bu 4
DBIx::Class::DeploymentHandler::VersionStorage::Deprecated
.SH METHODS
.IX Header "METHODS"
.SS add_database_version
.IX Subsection "add_database_version"
.Vb 5
\& $dh\->add_database_version({
\&   version     => \*(Aq1.02\*(Aq,
\&   ddl         => $ddl, # can be undef
\&   upgrade_sql => $sql, # can be undef
\& });
.Ve
.PP
Store a new version into the version storage
.SS database_version
.IX Subsection "database_version"
.Vb 1
\& my $db_version = $version_storage\->database_version
.Ve
.PP
Returns the most recently installed version in the database.
.SS delete_database_version
.IX Subsection "delete_database_version"
.Vb 1
\& $dh\->delete_database_version({ version => \*(Aq1.02\*(Aq })
.Ve
.PP
Deletes given database version from the version storage
.SS version_storage_is_installed
.IX Subsection "version_storage_is_installed"
.Vb 2
\& warn q(I can\*(Aqt version this database!)
\&   unless $dh\->version_storage_is_installed
.Ve
.PP
return true if the version storage is installed.
.SH AUTHOR
.IX Header "AUTHOR"
Arthur Axel "fREW" Schmidt <frioux+cpan@gmail.com>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2024 by Arthur Axel "fREW" Schmidt.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
