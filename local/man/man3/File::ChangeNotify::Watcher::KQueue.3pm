.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "File::ChangeNotify::Watcher::KQueue 3pm"
.TH File::ChangeNotify::Watcher::KQueue 3pm 2019-01-09 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
File::ChangeNotify::Watcher::KQueue \- KQueue\-based watcher subclass
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This class implements watching using IO::KQueue, which must be installed
for it to work. This is a BSD alternative to Linux's Inotify and other
event-based systems.
.SH CAVEATS
.IX Header "CAVEATS"
Although this watcher is more efficient and accurate than the
\&\f(CW\*(C`File::ChangeNotify::Watcher::Default\*(C'\fR class, in order to monitor files and
directories, it must open filehandles to each of them. Because many BSD
systems have relatively low defaults for the maximum number of files each
process can open, you may find you run out of file descriptors.
.PP
On FreeBSD, you can check (and alter) your system's settings with \f(CW\*(C`sysctl\*(C'\fR if
necessary. The important keys are: \f(CW\*(C`kern.maxfiles\*(C'\fR and
\&\f(CW\*(C`kern.maxfilesperproc\*(C'\fR.  You can see how many files your system current has
open with \f(CW\*(C`kern.openfiles\*(C'\fR.
.PP
On OpenBSD, the \f(CW\*(C`sysctl\*(C'\fR keys are \f(CW\*(C`kern.maxfiles\*(C'\fR and \f(CW\*(C`kern.nfiles\*(C'\fR.
Per-process limits are set in \fI/etc/login.conf\fR. See \fBlogin.conf\fR\|(5) for
details.
.SH AUTHOR
.IX Header "AUTHOR"
Dan Thomas, <dan@cpan.org>
