.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Config::Any::JSON 3pm"
.TH Config::Any::JSON 3pm 2018-09-27 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Config::Any::JSON \- Load JSON config files
.SH DESCRIPTION
.IX Header "DESCRIPTION"
Loads JSON files. Example:
.PP
.Vb 9
\&    {
\&        "name": "TestApp",
\&        "Controller::Foo": {
\&            "foo": "bar"
\&        },
\&        "Model::Baz": {
\&            "qux": "xyzzy"
\&        }
\&    }
.Ve
.SH METHODS
.IX Header "METHODS"
.SS "extensions( )"
.IX Subsection "extensions( )"
return an array of valid extensions (\f(CW\*(C`json\*(C'\fR, \f(CW\*(C`jsn\*(C'\fR).
.ie n .SS "load( $file )"
.el .SS "load( \f(CW$file\fP )"
.IX Subsection "load( $file )"
Attempts to load \f(CW$file\fR as a JSON file.
.SS "requires_any_of( )"
.IX Subsection "requires_any_of( )"
Specifies that this modules requires one of, Cpanel::JSON::XS,
JSON::MaybeXS, JSON::DWIW, JSON::XS, JSON::Syck, JSON::PP or
JSON in order to work.
.SH AUTHOR
.IX Header "AUTHOR"
Brian Cassidy <bricas@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright 2006\-2016 by Brian Cassidy
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.IP \(bu 4
Catalyst
.IP \(bu 4
Config::Any
.IP \(bu 4
Cpanel::JSON::XS
.IP \(bu 4
JSON::MaybeXS
.IP \(bu 4
JSON::DWIW
.IP \(bu 4
JSON::XS
.IP \(bu 4
JSON::Syck
.IP \(bu 4
JSON
