.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "SQL::Statement::Term 3pm"
.TH SQL::Statement::Term 3pm 2020-10-21 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
SQL::Statement::Term \- base class for all terms
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 4
\&  # create a term with an SQL::Statement object as owner
\&  my $term = SQL::Statement::Term\->new( $owner );
\&  # access the value of that term
\&  $term\->value( $eval );
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
SQL::Statement::Term is an abstract base class providing the interface
for all terms.
.SH INHERITANCE
.IX Header "INHERITANCE"
.Vb 1
\&  SQL::Statement::Term
.Ve
.SH METHODS
.IX Header "METHODS"
.SS new
.IX Subsection "new"
Instantiates new term and stores a weak reference to the owner.
.SS value
.IX Subsection "value"
\&\fIAbstract\fR method which will return the value of the term. Must be
overridden by derived classes.
.SS DESTROY
.IX Subsection "DESTROY"
Destroys the term and undefines the weak reference to the owner.
.SH NAME
SQL::Statement::ConstantTerm \- term for constant values
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 4
\&  # create a term with an SQL::Statement object as owner
\&  my $term = SQL::Statement::ConstantTerm\->new( $owner, \*(Aqfoo\*(Aq );
\&  # access the value of that term \- returns \*(Aqfoo\*(Aq
\&  $term\->value( $eval );
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
SQL::Statement::ConstantTerm implements a term which will always return the
same constant value.
.SH INHERITANCE
.IX Header "INHERITANCE"
.Vb 2
\&  SQL::Statement::ConstantTerm
\&  ISA SQL::Statement::Term
.Ve
.SH METHODS
.IX Header "METHODS"
.SS new
.IX Subsection "new"
Instantiates new term and stores the constant to deliver and a weak
reference to the owner.
.SS value
.IX Subsection "value"
Returns the specified constant.
.SH NAME
SQL::Statement::ColumnValue \- term for column values
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 5
\&  # create a term with an SQL::Statement object as owner
\&  my $term = SQL::Statement::ColumnValue\->new( $owner, \*(Aqid\*(Aq );
\&  # access the value of that term \- returns the value of the column \*(Aqid\*(Aq
\&  # of the currently active row in $eval
\&  $term\->value( $eval );
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
SQL::Statement::ColumnValue implements a term which will return the specified
column of the active row.
.SH INHERITANCE
.IX Header "INHERITANCE"
.Vb 2
\&  SQL::Statement::ColumnValue
\&  ISA SQL::Statement::Term
.Ve
.SH METHODS
.IX Header "METHODS"
.SS new
.IX Subsection "new"
Instantiates new term and stores the column name to deliver and a weak
reference to the owner.
.SS value
.IX Subsection "value"
Returns the specified column value.
.SH "AUTHOR AND COPYRIGHT"
.IX Header "AUTHOR AND COPYRIGHT"
Copyright (c) 2009\-2020 by Jens Rehsack: rehsackATcpan.org
.PP
All rights reserved.
.PP
You may distribute this module under the terms of either the GNU
General Public License or the Artistic License, as specified in
the Perl README file.
