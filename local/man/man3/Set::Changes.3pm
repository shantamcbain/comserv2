.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Changes 3pm"
.TH Changes 3pm 2022-01-21 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
REVISION HISTORY \- Set::Object
.SH "1.42, 2022\-01\-21"
.IX Header "1.42, 2022-01-21"
.IP \(bu 4
Fix \f(CW\*(C`%h={}\*(C'\fR warning, by Pauwel Coppieters
.IP \(bu 4
add \fIexamples/slow\-sort.pl\fR. see RT #90070
.SH "1.41, 2021\-01\-17"
.IX Header "1.41, 2021-01-17"
.IP \(bu 4
Use meta-spec 2, Moose \-> dev.requires not runtime.recommends
(GH #6, RT #134034) by mohawk
.SH "1.40, 2020\-01\-19"
.IX Header "1.40, 2020-01-19"
.IP \(bu 4
Fixed perl5.28 regressions (not cperl), for @$set args to other set functions.
(RT #131345). Fixed by adding missing SvGETMAGIC expansions to all args.
.IP \(bu 4
Bumped minimal required perl version to 5.8 for arrayref @$set behavior.
.IP \(bu 4
Fixed the smokers and some author tests.
.SH "1.39, 2018\-01\-08"
.IX Header "1.39, 2018-01-08"
.IP \(bu 4
Skip installing Changes.pod (PR #5, kentfredric)
.SH "1.38, 2017\-11\-11"
.IX Header "1.38, 2017-11-11"
.IP \(bu 4
Add test_cover and release targets
.SH "1.37, 2017\-11\-11"
.IX Header "1.37, 2017-11-11"
.IP \(bu 4
Test fixes for \-Ddefault_inc_excludes_dot, RT #120540
.IP \(bu 4
Skip failing threads test <= 5.10.0
.IP \(bu 4
Add CI hooks
.SH "1.36, 2017\-11\-10"
.IX Header "1.36, 2017-11-10"
.IP \(bu 4
Davem fixed get-magic for the new arguments, fixing
NetHack-Item [perl #132152] <https://rt.perl.org/Public/Bug/Display.html?id=132152>.
See [cpan #123582] <https://rt.cpan.org/Ticket/Display.html?id=123582>
.IP \(bu 4
Stabilize \fIt/misc/kwalitee.t\fR test
.SH "1.35, 2015\-06\-10"
.IX Header "1.35, 2015-06-10"
.IP \(bu 4
Change to Artistic License 2.0
.IP \(bu 4
Add more misc tests. Add use strict to Set::Object::Weak
.SH "1.34, 2013\-12\-25"
.IX Header "1.34, 2013-12-25"
.IP \(bu 4
Make synopsis examples work (tadzik)
.SH "1.33, 2013\-12\-13"
.IX Header "1.33, 2013-12-13"
.IP \(bu 4
Fix RT #90070: Improve pod for sorted @$set in list context vs 
unsorted \->elements (ftobin)
.IP \(bu 4
Fix RT #87658: Typo in pod (dsteinbrunner)
.SH "1.32, 2013\-05\-15 rurban (released 2013\-12\-13)"
.IX Header "1.32, 2013-05-15 rurban (released 2013-12-13)"
.IP \(bu 4
Reverts Changes.pod patch RT#85244 as it conflicts with the Set::Object pod on metacpan.
Also RT #85246
.SH "1.31, 2013\-05\-13 rurban"
.IX Header "1.31, 2013-05-13 rurban"
.IP \(bu 4
Changes.pod patch by Gregor Hermann, debian perl group \- RT#85244
.SH "1.30, 2013\-04\-04 rurban (new maintainer)"
.IX Header "1.30, 2013-04-04 rurban (new maintainer)"
.IP \(bu 4
Fixes for 5.16 and newer \- RT#83426
Sort by member names, not the refs.
Fix wrong weak test with globals. Changed to lexicals and use strict/warnings.
.IP \(bu 4
Fix \fIt/misc/segfault.t\fR, check SvMAGICAL before doing \f(CW\*(C`mg_find\*(C'\fR
.IP \(bu 4
Fixed wrong C format types in warnings and \f(CW\*(C`SET_OBJECT_MAGIC_backref\*(C'\fR.
Added PREREQ_PMs, make Test::LeakTrace and Moose an optional dependency
for \fIt/misc/more_leaks.t\fR
.IP \(bu 4
Improve thread-safety (forbid concurrent writes), but still dealing with 
Attempt to free non-existent shared string and 
Unbalanced string table refcount: (1) for "8" during global destruction.
\&\- RT #22760
.IP \(bu 4
Add missing typemap entry const char * for 5.6
.SH "1.29, 13 Feb 2013"
.IX Header "1.29, 13 Feb 2013"
.IP \(bu 4
Fixed a typo in a function which really shouldn't exist \- RT#79653
.IP \(bu 4
Marked a couple of functions as deprecated for removal (including the
above function).
.IP \(bu 4
Fixed the magic cleanup code to use the appropriate macro/function to
clean up the magic list instead of trying to do it itself.
Unsurprisingly, fixes a memory leak.  (RT#69967, also RT#67289)
.SH "1.28, 22 Jul 2010"
.IX Header "1.28, 22 Jul 2010"
.IP \(bu 4
Fixed a portability concern for some platforms' C compilers (that do
not support //\-style comments) \- RT#52690
.IP \(bu 4
Valid SIGNATURE file \- RT#50492
.SH "1.27, 15 Jan 2009"
.IX Header "1.27, 15 Jan 2009"
.IP \(bu 4
Fix a typo that affected building against Perls with debugging enabled.
.IP \(bu 4
A minor #define refactor (Yuval).
.IP \(bu 4
Squash some long-standing warnings I had been ignoring for ages and
Havard Eidnes prompted me to fix by logging an RT ticket for it.
.IP \(bu 4
Squash some global clean-up warnings.
.SH "1.26, 13 Oct 2008"
.IX Header "1.26, 13 Oct 2008"
.IP \(bu 4
Methods which destroyed \f(CW$@\fR due to internal use of \f(CW\*(C`eval\*(C'\fR now
properly call \f(CWlocal($@)\fR (Yuval)
.IP \(bu 4
Fix a leak and a corner case with weak set magic, and squash some
warnings (Yuval)
.IP \(bu 4
Define behaviour when dealing with return values from operations on
weak sets.  No longer hard-coded "Set::Object" \- may affect
Set::Object sub-classes (Sam).
.IP \(bu 4
(post-release changelog entry) related to the previous change,
Set::Object::Weak::set did not use to shift the invocant off the
stack, which caused result sets to have the inserted sets as members.
It now does, fixing this bug.
.SH "1.25, 22 Jul 2008"
.IX Header "1.25, 22 Jul 2008"
.IP \(bu 4
Portability: support Perls before 5.7.3, and make this dependency
explicit in the \fIMakefile.PL\fR
.SH "1.24, 20 Jul 2008"
.IX Header "1.24, 20 Jul 2008"
.IP \(bu 4
Remove threads test which had inadvertantly slipped into the MANIFEST
from source control, and add comprehensive documentation on the state
of thread support in this module.
.IP \(bu 4
Correct other silly MANIFEST mistakes.
.SH "1.23, 18 Jul 2008"
.IX Header "1.23, 18 Jul 2008"
.IP \(bu 4
Make behaviour when dealing with items which were \f(CW\*(C`undef\*(C'\fR defined.
Previously it might segfault (or Bus Error on Mac OS X) on some
operations and Perl versions, or result in an empty string being
inserted.
.IP \(bu 4
Fix a minor compile problem on IRIX, reported by David Cantrell.
.SH "1.22, 8 Oct 2007"
.IX Header "1.22, 8 Oct 2007"
.IP \(bu 4
Sub-classing interface added; it is now much easier to make
Set::Object subclasses that return objects other than more
Set::Objects when subclassing.  From Brían Mach Aon Innéirghthe.
.SH "1.21, 17 Feb 2007"
.IX Header "1.21, 17 Feb 2007"
.IP \(bu 4
Fix false negative when Test::Pod::Coverage isn't installed.  Reported
by Anna Bernathova of SuSE.
.SH "1.20, 16 Feb 2007"
.IX Header "1.20, 16 Feb 2007"
.IP \(bu 4
The \f(CW\*(C`\->compare\*(C'\fR function was returning "disjoint" for empty sets.
RT#24965.  (Nigel Metheringham)
.IP \(bu 4
Document lots of methods that were previously not documented.
.IP \(bu 4
Fix \f(CWSet::Object::Weak::set()\fR.  It was not passing its arguments to
\&\f(CW\*(C`Set::Object::Weak\->new()\*(C'\fR, which was very broken.
.SH "1.19, 23 Jan 2007"
.IX Header "1.19, 23 Jan 2007"
.IP \(bu 4
remove bogus inclusions of Data::Dumper and Devel::Peek
.IP \(bu 4
New class \f(CW\*(C`Set::Object::Weak\*(C'\fR, which all weak sets should get
re-blessed into when you call \f(CW\*(C`\->weaken\*(C'\fR.  Also added alternative
methods of constructing weak sets.
.IP \(bu 4
Fix a memory leak with scalar members (the internal hash used to store
the items was never being freed).  RT#24508.
.SH "1.18, 14 Sep 2006"
.IX Header "1.18, 14 Sep 2006"
.IP \(bu 4
We could only build on gcc due to the use of variadic macros.
use \f(CW\*(C`#ifdef\*(C'\fR to hide this GCC-specific extension (used only for
debugging) from non-GCC compilers.
.IP \(bu 4
Add note to man page on compatibility of \f(CW\*(C`Storable\*(C'\fR serializations of
\&\f(CW\*(C`Set::Object\*(C'\fRs between revisions.
.SH "1.17, 1 Aug 2006"
.IX Header "1.17, 1 Aug 2006"
.IP \(bu 4
fix compile problem affecting some platforms
.SH "1.16, 18 Jul 2006"
.IX Header "1.16, 18 Jul 2006"
.IP \(bu 4
weak reference support
.SH "1.15, 21 Jun 2006"
.IX Header "1.15, 21 Jun 2006"
.IP \(bu 4
Dumping sets with scalars in them via Storable now works.
.SH 1.14
.IX Header "1.14"
.IP \(bu 4
Fix build problem on Win32 (thanks Steffen Goeldner)
.SH 1.13
.IX Header "1.13"
.IP \(bu 4
Fix \fIMakefile.PL\fR so this \fIChanges.pod\fR is not delivered as
\&\f(CW\*(C`Set::Changes\*(C'\fR :\-}
.IP \(bu 4
Restore compatibility with 5.6.0
.IP \(bu 4
Remove some compile-time warnings, please let me know if this version
does not build on any platform!
.SH "1.12, 30 Aug 2005"
.IX Header "1.12, 30 Aug 2005"
.IP \(bu 4
added patch from Sergey Skvortsov for backwards compatibility with
Perl versions before 5.8 (include >100k \fIppport.h\fR!)
.IP \(bu 4
removed '\f(CWset()\fR' constructor from default export list, as its name
conflicts with too many other modules.
.SH "1.11, 27 Apr 2005"
.IX Header "1.11, 27 Apr 2005"
.IP \(bu 4
removed debugging \f(CW&_\fR func (was causing strange errors on 5.9.1)
.SH "1.10, 2 Apr 2005"
.IX Header "1.10, 2 Apr 2005"
.IP \(bu 4
added '\f(CWset()\fR' constructor and use-as-array-ref interface
.SH "1.09, 26 Mar 2005"
.IX Header "1.09, 26 Mar 2005"
.IP \(bu 4
added 'bool' overload operator to \f(CW\*(C`Set::Object\*(C'\fR.  For backwards
compatibility, always returns true.
.SS "1.08_02, 14 Jan 2005"
.IX Subsection "1.08_02, 14 Jan 2005"
.IP \(bu 4
Cutting out the "Universe" representation; this module gives plain
sets only.
.IP \(bu 4
documentation fixes
.SS "1.08_01, 12 Jan 2005"
.IX Subsection "1.08_01, 12 Jan 2005"
.IP \(bu 4
First attempt at adding support for scalars.  This version tries to
work as closely to \f(CW\*(C`Set::Scalar\*(C'\fR as possible.
.Sp
This approach will not be continued unless there are a lot of requests
for it to be implemented.  I think it's overly complicated, and not
what people expect when they want a Set.
.SH "1.08, 14 Oct 2004"
.IX Header "1.08, 14 Oct 2004"
.IP \(bu 4
another segfault bites the dust; this time, avoids a segfault when
taking a difference between sets of exactly 31 and 0 size.  Same root
fault as the previous bug, this time I have a test case for it, too.
.SH "1.07, 16 Aug 2004"
.IX Header "1.07, 16 Aug 2004"
.IP \(bu 4
yet another segfault fix, this time due to incorrect use of PUSHs vs
XPUSHs.  There is no test case for this bug unfortunately.
.SH "1.06, 1 May 2004"
.IX Header "1.06, 1 May 2004"
.IP \(bu 4
Fixed segfault when attempting to remove items from an empty set (fix
from Richard Sterling Cox)
.SH "1.05, 5 Jan 2004"
.IX Header "1.05, 5 Jan 2004"
.IP \(bu 4
some segfault fixes with Storable and Perl 5.6.1 (Perl 5.8.1 should be
OK)
.SH "1.04, 3 Aug 2003"
.IX Header "1.04, 3 Aug 2003"
.IP \(bu 4
added various functions similar to some found in Scalar::Util, but
with an extra one that performs a function that lays some groundwork
for Container::Object (\f(CW\*(C`ish_int\*(C'\fR).
.Sp
Some of these functions were in the XS code anyway, and they are
extremely small, so I didn't see a problem with duplicating them \-
saves an extra dependency.  Plus, Graham Barr won't let me put
\&\f(CW\*(C`ish_int\*(C'\fR or \f(CW\*(C`is_key\*(C'\fR in his module.
.Sp
Knowing that they are available will also assist in fixing some longer
standing bugs in Tangram (eg, using \f(CW\*(C`$obj + 0\*(C'\fR to get a unique ID
when \f(CWrefaddr($obj)\fR would be better)
.IP \(bu 4
lots more input marshalling; if you ever end up doing funny things to
a \f(CW\*(C`Set::Object\*(C'\fR, then at least now you'll get a clearer error
message.
.IP \(bu 4
more tests; Devel::Cover test coverage now at 91% (stmt), 67% (branch)
.IP \(bu 4
erroneously putting scalars into \f(CW\*(C`Set::Object\*(C'\fRs now no longer dumps
core.
.IP \(bu 4
serialisation of \f(CW\*(C`Set::Object\*(C'\fR objects is now possible via the
Storable module (Data::Dumper still does the wrong thing, but
there is nothing I can do about that).
.SH "1.03, 24 Jan 2003"
.IX Header "1.03, 24 Jan 2003"
.IP \(bu 4
fixed overload related bug
.SH "HISTORIC RELEASES"
.IX Header "HISTORIC RELEASES"
From original \fIChanges\fR file.
.PP
.Vb 1
\& Revision history for Perl extension Set::Object.
\& 
\& 0.01  Sat Jun  6 13:36:56 1998
\&         \- original version; created by h2xs 1.18
\& 
\& 0.02  Sun Jul  12 1998
\&         \- fixed refcount bug that leaked object when hash was
\&           reorganized
\&         \- ensured compatibility with Perl 5.004_71
\& 
\& 1.00 mid\-99
\&         \- fixed some bug (related to subsets?)
\&         \- first mature release
\& 
\& 1.01 8 Nov 1999
\&         \- no longer use Perl arrays internally, now compatible with
\&           Perl 5.005_62
\& 
\& 1.02 8 May 08 2000
\&         \- fixed bug that miscomputed new bucket while reindexing
.Ve
