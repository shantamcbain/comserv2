.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Config::Any::INI 3pm"
.TH Config::Any::INI 3pm 2018-09-27 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Config::Any::INI \- Load INI config files
.SH DESCRIPTION
.IX Header "DESCRIPTION"
Loads INI files. Example:
.PP
.Vb 1
\&    name=TestApp
\&
\&    [Controller::Foo]
\&    foo=bar
\&
\&    [Model::Baz]
\&    qux=xyzzy
.Ve
.SH METHODS
.IX Header "METHODS"
.SS "extensions( )"
.IX Subsection "extensions( )"
return an array of valid extensions (\f(CW\*(C`ini\*(C'\fR).
.ie n .SS "load( $file )"
.el .SS "load( \f(CW$file\fP )"
.IX Subsection "load( $file )"
Attempts to load \f(CW$file\fR as an INI file.
.SS "requires_all_of( )"
.IX Subsection "requires_all_of( )"
Specifies that this module requires Config::Tiny in order to work.
.SH "PACKAGE VARIABLES"
.IX Header "PACKAGE VARIABLES"
.ie n .IP "$MAP_SECTION_SPACE_TO_NESTED_KEY (boolean)" 4
.el .IP "\f(CW$MAP_SECTION_SPACE_TO_NESTED_KEY\fR (boolean)" 4
.IX Item "$MAP_SECTION_SPACE_TO_NESTED_KEY (boolean)"
This variable controls whether spaces in INI section headings will be expanded into nested hash keys.
e.g. it controls whether [Full Power] maps to \f(CW$config\fR\->{'Full Power'} or \f(CW$config\fR\->{'Full'}\->{'Power'}
.Sp
By default it is set to 1 (i.e. true).
.Sp
Set it to 0 to preserve literal spaces in section headings:
.Sp
.Vb 3
\&    use Config::Any;
\&    use Config::Any::INI;
\&    $Config::Any::INI::MAP_SECTION_SPACE_TO_NESTED_KEY = 0;
.Ve
.SH AUTHORS
.IX Header "AUTHORS"
Brian Cassidy <bricas@cpan.org>
.PP
Joel Bernstein <rataxis@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright 2006\-2016 by Brian Cassidy, portions copyright 2006, 2007 by Joel Bernstein
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.IP \(bu 4
Catalyst
.IP \(bu 4
Config::Any
.IP \(bu 4
Config::Tiny
