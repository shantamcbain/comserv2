.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Tree::Simple::Visitor::VariableDepthClone 3pm"
.TH Tree::Simple::Visitor::VariableDepthClone 3pm 2021-02-02 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Tree::Simple::Visitor::VariableDepthClone \- A Visitor for cloning parts of Tree::Simple hierarchy
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\&  use Tree::Simple::Visitor::VariableDepthClone;
\&
\&  # create an visitor
\&  my $visitor = Tree::Simple::Visitor::VariableDepthClone\->new();
\&
\&  $visitor\->setCloneDepth(3);
\&
\&  # pass our visitor to the tree
\&  $tree\->accept($visitor);
\&
\&  my $partial_tree = $visitor\->getClone();
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This visitor will clone
.SH METHODS
.IX Header "METHODS"
.IP \fBnew\fR 4
.IX Item "new"
There are no arguments to the constructor the object will be in its default state. You can use the \f(CW\*(C`setNodeFilter\*(C'\fR method to customize its behavior.
.IP "\fBincludeTrunk ($boolean)\fR" 4
.IX Item "includeTrunk ($boolean)"
Based upon the value of \f(CW$boolean\fR, this will tell the visitor to include the trunk of the tree in the traversal as well. This basically means it will clone the root node as well.
.IP "\fBsetCloneDepth ($number)\fR" 4
.IX Item "setCloneDepth ($number)"
.PD 0
.IP "\fBsetNodeFilter ($filter_function)\fR" 4
.IX Item "setNodeFilter ($filter_function)"
.PD
This method accepts a CODE reference as its \f(CW$filter_function\fR argument and throws an exception if it is not a code reference. This code reference is used to filter the tree nodes as they are cloned.
.IP "\fBvisit ($tree)\fR" 4
.IX Item "visit ($tree)"
This is the method that is used by the Tree::Simple \f(CW\*(C`accept\*(C'\fR method. It can also be used on its
own, it requires the \f(CW$tree\fR argument to be a Tree::Simple object (or derived from a
Tree::Simple object), and will throw and exception otherwise.
.IP \fBgetClone\fR 4
.IX Item "getClone"
This method returns the cloned partial tree.
.SH Repository
.IX Header "Repository"
<https://github.com/ronsavage/Tree\-Simple\-VisitorFactory>
.SH SUPPORT
.IX Header "SUPPORT"
Bugs should be reported via the CPAN bug tracker at
.PP
<https://github.com/ronsavage/Tree\-Simple\-VisitorFactory/issues>
.SH "CODE COVERAGE"
.IX Header "CODE COVERAGE"
See the \fBCODE COVERAGE\fR section in Tree::Simple::VisitorFactory for more information.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
These Visitor classes are all subclasses of \fBTree::Simple::Visitor\fR, which can be found in the \fBTree::Simple\fR module, you should refer to that module for more information.
.SH AUTHOR
.IX Header "AUTHOR"
stevan little, <stevan@iinteractive.com>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright 2005 by Infinity Interactive, Inc.
.PP
<http://www.iinteractive.com>
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
