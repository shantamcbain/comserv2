.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Throwable::Error 3pm"
.TH Throwable::Error 3pm 2023-01-01 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Throwable::Error \- an easy\-to\-use class for error objects
.SH VERSION
.IX Header "VERSION"
version 1.001
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 4
\&  package MyApp::Error;
\&  # NOTE: Moo can also be used here instead of Moose
\&  use Moose;
\&  extends \*(AqThrowable::Error\*(Aq;
\&
\&  has execution_phase => (
\&    is  => \*(Aqro\*(Aq,
\&    isa => \*(AqMyApp::Phase\*(Aq,
\&    default => \*(Aqstartup\*(Aq,
\&  );
.Ve
.PP
\&...and in your app...
.PP
.Vb 1
\&  MyApp::Error\->throw("all communications offline");
\&
\&  # or...
\&
\&  MyApp::Error\->throw({
\&    message         => "all communications offline",
\&    execution_phase => \*(Aqshutdown\*(Aq,
\&  });
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
Throwable::Error is a base class for exceptions that will be thrown to signal
errors and abort normal program flow.  Throwable::Error is an alternative to
Exception::Class, the features of which are largely
provided by the Moo object system atop which Throwable::Error is built.
.PP
Throwable::Error performs the Throwable and StackTrace::Auto
roles.  That means you can call \f(CW\*(C`throw\*(C'\fR on it to create and throw an error
object in one call, and that every error object will have a stack trace for its
creation.
.SH "PERL VERSION"
.IX Header "PERL VERSION"
This library should run on perls released even a long time ago.  It should work
on any version of perl released in the last five years.
.PP
Although it may work on older versions of perl, no guarantee is made that the
minimum required version will not be increased.  The version may be increased
for any reason, and there is no promise that patches will be accepted to lower
the minimum required perl.
.SH ATTRIBUTES
.IX Header "ATTRIBUTES"
.SS message
.IX Subsection "message"
This attribute must be defined and must contain a string describing the error
condition.  This string will be printed at the top of the stack trace when the
error is stringified.
.SS stack_trace
.IX Subsection "stack_trace"
This attribute, provided by StackTrace::Auto, will contain a stack trace
object guaranteed to respond to the \f(CW\*(C`as_string\*(C'\fR method.  For more information
about the stack trace and associated behavior, consult the StackTrace::Auto
docs.
.SH METHODS
.IX Header "METHODS"
.SS as_string
.IX Subsection "as_string"
This method will provide a string representing the error, containing the
error's message followed by the its stack trace.
.SH AUTHORS
.IX Header "AUTHORS"
.IP \(bu 4
Ricardo SIGNES <cpan@semiotic.systems>
.IP \(bu 4
Florian Ragwitz <rafl@debian.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2022 by Ricardo SIGNES.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
