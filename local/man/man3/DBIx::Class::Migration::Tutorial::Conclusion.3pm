.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "DBIx::Class::Migration::Tutorial::Conclusion 3pm"
.TH DBIx::Class::Migration::Tutorial::Conclusion 3pm 2020-06-02 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
DBIx::Class::Migration::Tutorial::Conclusion \- Final thoughts
.SH GOAL
.IX Header "GOAL"
A quick recap and thoughts about where to go next.
.SH SUMMARY
.IX Header "SUMMARY"
Nice to see you get this far!  I hope you now have the basic understanding
needed to be able to integrate migrations into your DBIC workflow, testing
and web development.  The next bit is up to you.  Use the tools, think about
where the gaps are, and give me some feedback.  Hopefully over time this
tutorial can become better and we can also start to create some basic recipes
for good approaches to common problems.  Thanks!
.SH "NEXT STEPS"
.IX Header "NEXT STEPS"
You might find looking at DBIx::Class::Migration::FAQ useful in debugging
some of the more common error messages that I've seen while preparing this
tutorial.
.PP
Also, at this point reviewing the API level documentation for
DBIx::Class::Migration and DBIx::Class::Migration::Script useful.  For
more on some of the testing stuff we covered see DBIx::Class::Migration::Population
and Test::DBIx::Class.
.PP
Lastly, its definitely a good idea to review the documention for both
DBIx::Class::DeploymentHandler and DBIx::Class::Fixtures if you have not
already.  Looking at SQL::Translator may not be a bad idea either.
.SH AUTHOR
.IX Header "AUTHOR"
See DBIx::Class::Migration for author information
.SH "COPYRIGHT & LICENSE"
.IX Header "COPYRIGHT & LICENSE"
See DBIx::Class::Migration for copyright and license information
