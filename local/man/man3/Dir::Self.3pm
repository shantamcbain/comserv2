.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Dir::Self 3pm"
.TH Dir::Self 3pm 2013-09-03 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Dir::Self \- a _\|_DIR_\|_ constant for the directory your source file is in
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\&  use Dir::Self;
\&  
\&  use lib _\|_DIR_\|_ . "/lib";
\&  
\&  my $conffile = _\|_DIR_\|_ . "/config";
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
Perl has two pseudo-constants describing the current location in your source
code, \f(CW\*(C`_\|_FILE_\|_\*(C'\fR and \f(CW\*(C`_\|_LINE_\|_\*(C'\fR. This module adds \f(CW\*(C`_\|_DIR_\|_\*(C'\fR, which expands
to the directory your source file is in, as an absolute pathname.
.PP
This is useful if your code wants to access files in the same directory, like
helper modules or configuration data. This is a bit like FindBin except
it's not limited to the main program, i.e. you can also use it in modules. And
it actually works.
.PP
As of version 0.10 each use of \f(CW\*(C`_\|_DIR_\|_\*(C'\fR recomputes the directory name; this
ensures that files in different directories that share the same package name
get correct results. If you don't want this, \f(CW\*(C`use Dir::Self qw(:static)\*(C'\fR will
create a true \f(CW\*(C`_\|_DIR_\|_\*(C'\fR constant in your package that contains the directory
name at the point of \f(CW\*(C`use\*(C'\fR.
.SH AUTHOR
.IX Header "AUTHOR"
Lukas Mai <l.mai \f(CW@web\fR.de>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2007, 2008, 2013 by Lukas Mai
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself, either Perl version 5.8.8 or,
at your option, any later version of Perl 5 you may have available.
