.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Lingua::Stem::Ru 3pm"
.TH Lingua::Stem::Ru 3pm 2016-02-12 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Lingua::Stem::Ru \- Porter's stemming algorithm for Russian (KOI8\-R only)
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 5
\&    use Lingua::Stem::Ru;
\&    my $stems = Lingua::Stem::Ru::stem({ \-words => $word_list_reference,
\&                                         \-locale => \*(Aqru\*(Aq,
\&                                         \-exceptions => $exceptions_hash,
\&                                      });
\&
\&    my $stem = Lingua::Stem::Ru::stem_word( $word );
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This module applies the Porter Stemming Algorithm to its parameters,
returning the stemmed words.
.PP
The algorithm is implemented exactly as described in:
.PP
.Vb 1
\&    http://snowball.tartarus.org/algorithms/russian/stemmer.html
.Ve
.PP
The code is carefully crafted to work in conjunction with the Lingua::Stem
module by Benjamin Franz. This stemmer is also based 
on the work of Aldo Capini, see Lingua::Stem::It.
.SH METHODS
.IX Header "METHODS"
.IP "stem({ \-words => \e@words, \-locale => 'ru', \-exceptions => \e%exceptions });" 4
.IX Item "stem({ -words => @words, -locale => 'ru', -exceptions => %exceptions });"
Stems a list of passed words. Returns an anonymous list reference to the stemmed
words.
.Sp
Example:
.Sp
.Vb 4
\&  my $stemmed_words = Lingua::Stem::Ru::stem({ \-words => \e@words,
\&                                              \-locale => \*(Aqru\*(Aq,
\&                                          \-exceptions => \e%exceptions,
\&                          });
.Ve
.ie n .IP "stem_word( $word );" 4
.el .IP "stem_word( \f(CW$word\fR );" 4
.IX Item "stem_word( $word );"
Stems a single word and returns the stem directly.
.Sp
Example:
.Sp
.Vb 1
\&  my $stem = Lingua::Stem::Ru::stem_word( $word );
.Ve
.IP "stem_caching({ \-level => 0|1|2 });" 4
.IX Item "stem_caching({ -level => 0|1|2 });"
Sets the level of stem caching.
.Sp
\&'0' means 'no caching'. This is the default level.
.Sp
\&'1' means 'cache per run'. This caches stemming results during a single
    call to 'stem'.
.Sp
\&'2' means 'cache indefinitely'. This caches stemming results until
    either the process exits or the 'clear_stem_cache' method is called.
.IP clear_stem_cache; 4
.IX Item "clear_stem_cache;"
Clears the cache of stemmed words
.SS EXPORT
.IX Subsection "EXPORT"
None by default.
.SH AUTHOR
.IX Header "AUTHOR"
Aleksandr Guidrevitch <pillgrim@mail.ru>
.SH REPOSITORY
.IX Header "REPOSITORY"
<https://github.com/neilb/Lingua\-Stem\-Ru>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.IP Lingua::Stem 4
.IX Item "Lingua::Stem"
provides an interface for some other pure Perl stemmers available
on CPAN, including Lingua::Stem::Ru
.IP Lingua::Stem::Snowball 4
.IX Item "Lingua::Stem::Snowball"
.PD 0
.IP Lingua::Stem::Any 4
.IX Item "Lingua::Stem::Any"
.PD
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2003 by Aldo Calpini <dada@perl.it>
.PP
Copyright (C) 2004 by Aleksandr Guidrevitch <pillgrim@mail.ru>
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
