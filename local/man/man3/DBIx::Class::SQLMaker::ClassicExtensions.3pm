.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "DBIx::Class::SQLMaker::ClassicExtensions 3pm"
.TH DBIx::Class::SQLMaker::ClassicExtensions 3pm 2022-05-15 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
DBIx::Class::SQLMaker::ClassicExtensions \- Class containing generic enhancements to SQL::Abstract::Classic
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This module is not intended to be used standalone. Instead it represents
a quasi-role, that one would "mix in" via classic \f(CW@ISA\fR inheritance into
a DBIx::Class::SQLMaker\-like provider. See
"connect_call_rebase_sqlmaker" in DBIx::Class::Storage::DBI for more info.
.PP
Currently the enhancements over SQL::Abstract::Classic are:
.IP \(bu 4
Support for \f(CW\*(C`JOIN\*(C'\fR statements (via extended \f(CW\*(C`table/from\*(C'\fR support)
.IP \(bu 4
Support of functions in \f(CW\*(C`SELECT\*(C'\fR lists
.IP \(bu 4
\&\f(CW\*(C`GROUP BY\*(C'\fR/\f(CW\*(C`HAVING\*(C'\fR support (via extensions to the order_by parameter)
.IP \(bu 4
A rudimentary multicolumn IN operator
.IP \(bu 4
Support of \f(CW\*(C`...FOR UPDATE\*(C'\fR type of select statement modifiers
.SH "FURTHER QUESTIONS?"
.IX Header "FURTHER QUESTIONS?"
Check the list of additional DBIC resources.
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This module is free software copyright
by the DBIx::Class (DBIC) authors. You can
redistribute it and/or modify it under the same terms as the
DBIx::Class library.
