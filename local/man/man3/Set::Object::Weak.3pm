.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Set::Object::Weak 3pm"
.TH Set::Object::Weak 3pm 2019-06-06 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Set::Object::Weak \- Sets without the referant reference increment
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\& use Set::Object::Weak qw(weak_set);
\&
\& my $set = Set::Object::Weak\->new( 0, "", {}, [], $object );
\& # or
\& my $set = weak_set( 0, "", {}, [], $object );
\&
\& print $set\->size;  # 2 \- the scalars aren\*(Aqt objects
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
Sets, but weak.  See "weaken" in Set::Object.
.PP
Note that the \f(CW\*(C`set\*(C'\fR in \f(CW\*(C`Set::Object::Weak\*(C'\fR returns weak sets.  This
is intentional, so that you can make all the sets in scope weak just
by changing \f(CW\*(C`use Set::Object\*(C'\fR to \f(CW\*(C`use Set::Object::Weak\*(C'\fR.
.SH CONSTRUCTORS
.IX Header "CONSTRUCTORS"
.IP new 4
.IX Item "new"
This class method is exactly the same as \f(CW\*(C`Set::Object\->new\*(C'\fR,
except that it returns a weak set.
.IP "weak_set( ... )" 4
.IX Item "weak_set( ... )"
This optionally exported \fBfunction\fR is a shortcut for saying
\&\f(CW\*(C`Set::Object::Weak\->new(...)\*(C'\fR.
.IP "set( ... )" 4
.IX Item "set( ... )"
This method is exported so that if you see:
.Sp
.Vb 1
\& use Set::Object qw(set);
.Ve
.Sp
You can turn it into using weak sets lexically with:
.Sp
.Vb 1
\& use Set::Object::Weak qw(set);
.Ve
.Sp
Set::Object 1.19 had a bug in this method that meant that it would not
add the passed members into it.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Set::Object
.SH CREDITS
.IX Header "CREDITS"
Perl magic by Sam Vilain, <samv@cpan.org>
.PP
Idea from nothingmuch.
