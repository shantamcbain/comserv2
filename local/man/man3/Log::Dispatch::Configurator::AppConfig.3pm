.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Log::Dispatch::Configurator::AppConfig 3pm"
.TH Log::Dispatch::Configurator::AppConfig 3pm 2010-02-05 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Log::Dispatch::Configurator::AppConfig \- Configurator implementation with AppConfig
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 2
\&  use Log::Dispatch::Config;
\&  use Log::Dispatch::Configurator::AppConfig;
\&
\&  my $config = Log::Dispatch::Configurator::AppConfig\->new(\*(Aqlog.cfg\*(Aq);
\&  Log::Dispatch::Config\->configure($config);
\&
\&  # nearby piece of code
\&  my $log = Log::Dispatch::Config\->instance;
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
Log::Dispatch::Configurator::AppConfig is an implementation of
Log::Dispatch::Configurator using AppConfig format. Here is a sample
of config file.
.PP
.Vb 1
\&  dispatchers = file screen
\&
\&  file.class = Log::Dispatch::File
\&  file.min_level = debug
\&  file.filename = /path/to/log
\&  file.mode = append
\&  file.format = [%d] [%p] %m at %F line %L%n
\&
\&  screen.class = Log::Dispatch::Screen
\&  screen.min_level = info
\&  screen.stderr = 1
\&  screen.format = %m
.Ve
.PP
You can use ini style grouping.
.PP
.Vb 3
\&  [file]
\&  class = Log::Dispatch::File
\&  min_level = debug
\&
\&  [screen]
\&  class = Log::Dispatch::Screen
\&  min_level = info
.Ve
.PP
If you use _ (underscore) in dispatcher name, something very \fBbad\fR
may happen. It is safe when you avoid doing so.
.SH AUTHOR
.IX Header "AUTHOR"
Tatsuhiko Miyagawa <miyagawa@bulknews.net>
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Log::Dispatch::Config, AppConfig
