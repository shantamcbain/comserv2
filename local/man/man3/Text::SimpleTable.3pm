.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Text::SimpleTable 3pm"
.TH Text::SimpleTable 3pm 2018-07-23 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Text::SimpleTable \- Simple Eyecandy ASCII Tables
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\&    use Text::SimpleTable;
\&
\&    my $t1 = Text::SimpleTable\->new(5, 10);
\&    $t1\->row(\*(Aqfoobarbaz\*(Aq, \*(Aqyadayadayada\*(Aq);
\&    print $t1\->draw;
\&
\&    .\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-.
\&    | foob\- | yadayaday\- |
\&    | arbaz | ada        |
\&    \*(Aq\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\*(Aq
\&
\&    my $t2 = Text::SimpleTable\->new([5, \*(AqFoo\*(Aq], [10, \*(AqBar\*(Aq]);
\&    $t2\->row(\*(Aqfoobarbaz\*(Aq, \*(Aqyadayadayada\*(Aq);
\&    $t2\->row(\*(Aqbarbarbarbarbar\*(Aq, \*(Aqyada\*(Aq);
\&    print $t2\->draw;
\&
\&    .\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-.
\&    | Foo   | Bar        |
\&    +\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-+
\&    | foob\- | yadayaday\- |
\&    | arbaz | ada        |
\&    | barb\- | yada       |
\&    | arba\- |            |
\&    | rbar\- |            |
\&    | bar   |            |
\&    \*(Aq\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\*(Aq
\&
\&    my $t3 = Text::SimpleTable\->new([5, \*(AqFoo\*(Aq], [10, \*(AqBar\*(Aq]);
\&    $t3\->row(\*(Aqfoobarbaz\*(Aq, \*(Aqyadayadayada\*(Aq);
\&    $t3\->hr;
\&    $t3\->row(\*(Aqbarbarbarbarbar\*(Aq, \*(Aqyada\*(Aq);
\&    print $t3\->draw;
\&
\&    .\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-.
\&    | Foo   | Bar        |
\&    +\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-+
\&    | foob\- | yadayaday\- |
\&    | arbaz | ada        |
\&    +\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-+
\&    | barb\- | yada       |
\&    | arba\- |            |
\&    | rbar\- |            |
\&    | bar   |            |
\&    \*(Aq\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\*(Aq
\&
\&    print $t3\->boxes\->draw;
\&
\&    ┌───────┬────────────┐
\&    │ Foo   │ Bar        │
\&    ├───────┼────────────┤
\&    │ foob\- │ yadayaday\- │
\&    │ arbaz │ ada        │
\&    ├───────┼────────────┤
\&    │ barb\- │ yada       │
\&    │ arba\- │            │
\&    │ rbar\- │            │
\&    │ bar   │            │
\&    └───────┴────────────┘
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
Simple eyecandy ASCII tables.
.SH METHODS
.IX Header "METHODS"
Text::SimpleTable implements the following methods.
.ie n .SS """new"""
.el .SS \f(CWnew\fP
.IX Subsection "new"
.Vb 2
\&    my $t = Text::SimpleTable\->new(5, 10);
\&    my $t = Text::SimpleTable\->new([5, \*(AqCol1\*(Aq, 10, \*(AqCol2\*(Aq]);
.Ve
.ie n .SS """draw"""
.el .SS \f(CWdraw\fP
.IX Subsection "draw"
.Vb 1
\&    my $ascii = $t\->draw;
.Ve
.ie n .SS """hr"""
.el .SS \f(CWhr\fP
.IX Subsection "hr"
.Vb 1
\&    $t = $t\->hr;
.Ve
.ie n .SS """row"""
.el .SS \f(CWrow\fP
.IX Subsection "row"
.Vb 1
\&    $t = $t\->row(\*(Aqcol1 data\*(Aq, \*(Aqcol2 data\*(Aq);
.Ve
.ie n .SS """boxes"""
.el .SS \f(CWboxes\fP
.IX Subsection "boxes"
.Vb 1
\&    $t = $t\->boxes;
.Ve
.PP
\&\f(CW\*(C`boxes\*(C'\fR switches the output generated by \f(CW\*(C`draw\*(C'\fR to use the unicode box drawing characters. The last 
example above may not render nicely on some devices.
.SH AUTHOR
.IX Header "AUTHOR"
Sebastian Riedel, \f(CW\*(C`sri@cpan.org\*(C'\fR.
.SH MAINTAINER
.IX Header "MAINTAINER"
Marcus Ramberg \f(CW\*(C`mramberg@cpan.org\*(C'\fR.
.SH CREDITS
.IX Header "CREDITS"
In alphabetical order:
.PP
Brian Cassidy
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2005\-2010, Sebastian Riedel.
.PP
This program is free software, you can redistribute it and/or modify it under
the terms of the Artistic License version 2.0.
