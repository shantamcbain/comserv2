.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "POSIX::strftime::Compiler 3pm"
.TH POSIX::strftime::Compiler 3pm 2024-01-05 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
POSIX::strftime::Compiler \- GNU C library compatible strftime for loggers and servers
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\&    use POSIX::strftime::Compiler qw/strftime/;
\&
\&    say strftime(\*(Aq%a, %d %b %Y %T %z\*(Aq,localtime):
\&    
\&    my $fmt = \*(Aq%a, %d %b %Y %T %z\*(Aq;
\&    my $psc = POSIX::strftime::Compiler\->new($fmt);
\&    say $psc\->to_string(localtime);
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
POSIX::strftime::Compiler provides GNU C library compatible \fBstrftime\fR\|(3). But this module will not affected
by the system locale.  This feature is useful when you want to write loggers, servers and portable applications.
.PP
For generate same result strings on any locale, POSIX::strftime::Compiler wraps POSIX::strftime and 
converts some format characters to perl code
.SH FUNCTION
.IX Header "FUNCTION"
.ie n .IP "strftime($fmt:String, @time)" 4
.el .IP "strftime($fmt:String, \f(CW@time\fR)" 4
.IX Item "strftime($fmt:String, @time)"
Generate formatted string from a format and time.
.Sp
.Vb 2
\&  my ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime();
\&  strftime(\*(Aq%d/%b/%Y:%T %z\*(Aq,$sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst):
.Ve
.Sp
Compiled codes are stored in \f(CW%POSIX::strftime::Compiler::STRFTIME\fR. This function is not exported by default.
.SH METHODS
.IX Header "METHODS"
.IP new($fmt) 4
.IX Item "new($fmt)"
create instance of POSIX::strftime::Compiler
.IP to_string(@time) 4
.IX Item "to_string(@time)"
Generate formatted string from time.
.SH "FORMAT CHARACTERS"
.IX Header "FORMAT CHARACTERS"
POSIX::strftime::Compiler supports almost all characters that GNU \fBstrftime\fR\|(3) supports. 
But \f(CW%E[cCxXyY]\fR and \f(CW%O[deHImMSuUVwWy]\fR are not supported, just remove E and O prefix.
.SH "A RECOMMEND MODULE"
.IX Header "A RECOMMEND MODULE"
.IP Time::TZOffset 4
.IX Item "Time::TZOffset"
If Time::TZOffset is available, P::s::Compiler use it for more faster time zone offset calculation.
I strongly recommend you to install this if you use \f(CW%z\fR.
.SH "PERFORMANCE ISSUES ON WINDOWS"
.IX Header "PERFORMANCE ISSUES ON WINDOWS"
Windows and Cygwin and some system may not support \f(CW%z\fR and \f(CW%Z\fR. For these system, 
POSIX::strftime::Compiler calculate time zone offset and find zone name. This is not fast.
If you need performance on Windows and Cygwin, please install Time::TZOffset
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.IP POSIX::strftime::GNU 4
.IX Item "POSIX::strftime::GNU"
POSIX::strftime::Compiler is built on POSIX::strftime::GNU::PP code
.IP POSIX 4
.IX Item "POSIX"
.PD 0
.IP Apache::LogFormat::Compiler 4
.IX Item "Apache::LogFormat::Compiler"
.PD
.SH LICENSE
.IX Header "LICENSE"
Copyright (C) Masahiro Nagano.
.PP
Format specification is based on \fBstrftime\fR\|(3) manual page which is a part of the Linux man-pages project.
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
.SH AUTHOR
.IX Header "AUTHOR"
Masahiro Nagano <kazeburo@gmail.com>
