.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Crypt::PBKDF2::Hash 3pm"
.TH Crypt::PBKDF2::Hash 3pm 2016-05-31 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Crypt::PBKDF2::Hash \- Abstract role for PBKDF2 hashing algorithms.
.SH VERSION
.IX Header "VERSION"
version 0.161520
.SH METHODS
.IX Header "METHODS"
.SS \fBhash_len()\fP
.IX Subsection "hash_len()"
Returns the length (in bytes) of the hashes this algorithm generates.
.ie n .SS "generate($data, $key)"
.el .SS "generate($data, \f(CW$key\fP)"
.IX Subsection "generate($data, $key)"
Generate strong pseudorandom bits based on the \f(CW$data\fR and \f(CW$key\fR
.SS \fBto_algo_string()\fP
.IX Subsection "to_algo_string()"
Return a string representing any optional arguments this object was created
with, for use by Crypt::PBKDF2's \f(CW\*(C`generate\*(C'\fR and \f(CW\*(C`encode_string\*(C'\fR
methods. May return undef if no arguments are required, in which case none
will be serialized and \f(CW\*(C`from_algo_string\*(C'\fR won't be called on reading the
hash.
.SS from_algo_string($str)
.IX Subsection "from_algo_string($str)"
Given a string as produced by \f(CW\*(C`from_algo_string\*(C'\fR, return an instance of
this class with options corresponding to those in \f(CW$str\fR. If no options are
expected, it's permissible for this method to throw an exception.
.SH AUTHOR
.IX Header "AUTHOR"
Andrew Rodland <arodland@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2016 by Andrew Rodland.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
