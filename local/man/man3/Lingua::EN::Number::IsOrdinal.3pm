.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Lingua::EN::Number::IsOrdinal 3pm"
.TH Lingua::EN::Number::IsOrdinal 3pm 2015-03-23 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Lingua::EN::Number::IsOrdinal \- detect if English number is ordinal or cardinal
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\&    use Lingua::EN::Number::IsOrdinal \*(Aqis_ordinal\*(Aq;
\&
\&    ok is_ordinal(\*(Aqfirst\*(Aq);
\&
\&    ok !is_ordinal(\*(Aqone\*(Aq);
\&
\&    ok is_ordinal(\*(Aq2nd\*(Aq);
\&
\&    ok !is_ordinal(\*(Aq2\*(Aq);
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This module will tell you if a number, either in words or as digits, is a
cardinal or ordinal
number <http://www.ego4u.com/en/cram-up/vocabulary/numbers/ordinal>.
.PP
This is useful if you e.g. want to distinguish these types of numbers found with
Lingua::EN::FindNumber and take different actions.
.SH FUNCTIONS
.IX Header "FUNCTIONS"
.SS is_ordinal
.IX Subsection "is_ordinal"
Takes a number as English words or digits (with or without ordinal suffix) and
returns \f(CW1\fR for ordinal numbers and \f(CW\*(C`undef\*(C'\fR for cardinal numbers.
.PP
Checks that the whole parameter is a number using Lingua::EN::FindNumber or
a regex in the case of digits, and if it isn't will throw a \f(CW\*(C`not a number\*(C'\fR
exception.
.PP
This function can be optionally imported.
.SH METHODS
.IX Header "METHODS"
.SS _is_ordinal
.IX Subsection "_is_ordinal"
Method version of "is_ordinal", this is where the function is actually
implemented. Can be overloaded in a subclass.
.SS _is_number
.IX Subsection "_is_number"
Returns \f(CW1\fR if the passed in string is a word-number as detected by
Lingua::EN::FindNumber or is a cardinal or ordinal number made of digits and
(for ordinal numbers) a suffix. Otherwise returns \f(CW\*(C`undef\*(C'\fR. Can be overloaded in
a subclass.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.IP \(bu 4
Lingua::EN::FindNumber
.IP \(bu 4
Lingua::EN::Words2Nums
.IP \(bu 4
Lingua::EN::Inflect::Phrase
.SH AUTHOR
.IX Header "AUTHOR"
Rafael Kitover <rkitover@cpan.org>
.SH LICENSE
.IX Header "LICENSE"
Copyright 2013\-2015 by Rafael Kitover
.PP
This library is free software; you can redistribute it and/or modify it under
the same terms as Perl itself.
