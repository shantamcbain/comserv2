.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Plack::LWPish 3pm"
.TH Plack::LWPish 3pm 2024-01-05 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Plack::LWPish \- HTTP::Request/Response compatible interface with HTTP::Tiny backend
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\&  use Plack::LWPish;
\&
\&  my $request = HTTP::Request\->new(GET => \*(Aqhttp://perl.com/\*(Aq);
\&
\&  my $ua = Plack::LWPish\->new;
\&  my $res = $ua\->request($request); # returns HTTP::Response
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This module is an adapter object that implements one method,
\&\f(CW\*(C`request\*(C'\fR that acts like LWP::UserAgent's request method
i.e. takes HTTP::Request object and returns HTTP::Response object.
.PP
This module is used solely inside Plack::Test::Suite and
Plack::Test::Server, and you are recommended to take a look at
HTTP::Thin if you would like to use this outside Plack.
.SH AUTHOR
.IX Header "AUTHOR"
Tatsuhiko Miyagawa
.SH "SEE ALSO"
.IX Header "SEE ALSO"
HTTP::Thin HTTP::Tiny LWP::UserAgent
