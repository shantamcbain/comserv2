.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "DBIx::Class::Migration::RunScript::Trait::TargetPath 3pm"
.TH DBIx::Class::Migration::RunScript::Trait::TargetPath 3pm 2020-06-02 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
DBIx::Class::Migration::RunScript::Trait::TargetPath \- Your migration target directory
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\&    use DBIx::Class::Migration::RunScript;
\&
\&    builder {
\&      \*(AqTargetPath\*(Aq,
\&      sub {
\&        open(my $file, \*(Aq<\*(Aq, shift\->target_path(\*(Aqfile\*(Aq));
\&      };
\&    };
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
Sometimes you would like to access your migration target directory when running
migration scripts.  For example, you might have some data stored in CSV files
and you want to load that data into the database as part of your migration.
.SH methods
.IX Header "methods"
This class defines the follow methods.
.SS target_path
.IX Subsection "target_path"
\&\f(CW@args\fR are optional.
.PP
returns a path to whatever \f(CW\*(C`target_dir\*(C'\fR is (typically PROJECT_ROOT/share if
you are using the default).  If you pass \f(CW@args\fR, those args will be added as
path parts to the returned path.
.PP
Example usage:
.PP
.Vb 3
\&  $self\->target_path
\&  $self\->target_path(\*(Aqfile\*(Aq);
\&  $self\->target_path(\*(Aqpath\*(Aq, \*(Aqto\*(Aq, \*(Aqfile\*(Aq);
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
DBIx::Class::Migration, DBIx::Class::Migration::RunScript
.SH AUTHOR
.IX Header "AUTHOR"
See DBIx::Class::Migration for author information
.SH "COPYRIGHT & LICENSE"
.IX Header "COPYRIGHT & LICENSE"
See DBIx::Class::Migration for copyright and license information
