.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Log::Contextual::Easy::Package 3pm"
.TH Log::Contextual::Easy::Package 3pm 2024-05-29 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Log::Contextual::Easy::Package \- Import all logging methods with WarnLogger as default package logger
.SH VERSION
.IX Header "VERSION"
version 0.009001
.SH SYNOPSIS
.IX Header "SYNOPSIS"
In your module:
.PP
.Vb 2
\&  package My::Module;
\&  use Log::Contextual::Easy::Package;
\&
\&  log_debug { "your message" };
\&  Dlog_trace { $_ } @vars;
.Ve
.PP
In your program:
.PP
.Vb 1
\&  use My::Module;
\&
\&  # enable warnings
\&  $ENV{MY_MODULE_UPTO}="TRACE";
\&
\&  # or use a specific logger with set_logger / with_logger
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
By default, this module enables a Log::Contextual::WarnLogger
with \f(CW\*(C`env_prefix\*(C'\fR based on the module's name that uses
Log::Contextual::Easy. The logging levels are set to \f(CW\*(C`trace\*(C'\fR \f(CW\*(C`debug\*(C'\fR,
\&\f(CW\*(C`info\*(C'\fR, \f(CW\*(C`warn\*(C'\fR, \f(CW\*(C`error\*(C'\fR, and \f(CW\*(C`fatal\*(C'\fR (in this order) and all
logging functions (log_...,
\&\f(CW\*(C`logS_...\*(C'\fR,
\&\f(CW\*(C`Dlog_...\*(C'\fR, and
\&\f(CW\*(C`Dlog...\*(C'\fR) are exported.
.PP
For what \f(CW\*(C`::Package\*(C'\fR implies, see "\-package_logger" in Log::Contextual.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.IP Log::Contextual::Easy::Default 4
.IX Item "Log::Contextual::Easy::Default"
.SH BUGS
.IX Header "BUGS"
Please report any bugs or feature requests on the bugtracker website
<https://github.com/haarg/Log\-Contextual/issues>
.PP
When submitting a bug or request, please include a test-file or a
patch to an existing test-file that illustrates the bug or desired
feature.
.SH AUTHOR
.IX Header "AUTHOR"
Arthur Axel "fREW" Schmidt <frioux+cpan@gmail.com>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2024 by Arthur Axel "fREW" Schmidt.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
