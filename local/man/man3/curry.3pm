.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "curry 3pm"
.TH curry 3pm 2021-12-30 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
curry \- Create automatic curried method call closures for any class or object
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\&  use curry;
\&
\&  my $code = $obj\->curry::frobnicate(\*(Aqfoo\*(Aq);
.Ve
.PP
is equivalent to:
.PP
.Vb 1
\&  my $code = sub { $obj\->frobnicate(foo => @_) };
.Ve
.PP
If you have a method name (or a coderef), you can call (as of version 2):
.PP
.Vb 1
\&  my $code = $obj\->curry::_($method => \*(Aqfoo\*(Aq);
.Ve
.PP
Additionally,
.PP
.Vb 1
\&  use curry::weak;
\&
\&  my $code = $obj\->curry::weak::frobnicate(\*(Aqfoo\*(Aq);
.Ve
.PP
is equivalent to:
.PP
.Vb 7
\&  my $code = do {
\&    Scalar::Util::weaken(my $weak_obj = $obj);
\&    sub {
\&      return unless $weak_obj; # in case it already went away
\&      $weak_obj\->frobnicate(foo => @_)
\&    };
\&  };
.Ve
.PP
Similarly, given a method name or coderef (as of version 2):
.PP
.Vb 1
\&  my $code = $obj\->curry::weak::_($method => \*(Aqfoo\*(Aq);
.Ve
.PP
There are also \f(CW$curry::curry\fR and \f(CW$curry::weak\fR globals that work
equivalently to \f(CW\*(C`curry::_\*(C'\fR and \f(CW\*(C`curry::weak::_\*(C'\fR respectively \- you'll
quite possibly see them in existing code because they were provided in
pre\-2.0 versions but they're unlikely to be the best option for new code.
.SH RATIONALE
.IX Header "RATIONALE"
How many times have you written
.PP
.Vb 1
\&  sub { $obj\->something($some, $args, @_) }
.Ve
.PP
or worse still needed to weaken it and had to check and re-check your code
to be sure you weren't closing over things the wrong way?
.PP
Right. That's why I wrote this.
.SH AUTHOR
.IX Header "AUTHOR"
mst \- Matt S. Trout (cpan:MSTROUT) <mst@shadowcat.co.uk>
.SH CONTRIBUTORS
.IX Header "CONTRIBUTORS"
None yet \- maybe this software is perfect! (ahahahahahahahahaha)
.SH COPYRIGHT
.IX Header "COPYRIGHT"
Copyright (c) 2012 the curry "AUTHOR" and "CONTRIBUTORS"
as listed above.
.SH LICENSE
.IX Header "LICENSE"
This library is free software and may be distributed under the same terms
as perl itself.
