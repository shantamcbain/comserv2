.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "MooseX::Getopt::Meta::Attribute::NoGetopt 3pm"
.TH MooseX::Getopt::Meta::Attribute::NoGetopt 3pm 2025-01-03 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
MooseX::Getopt::Meta::Attribute::NoGetopt \- Optional meta attribute for ignoring parameters
.SH VERSION
.IX Header "VERSION"
version 0.78
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 2
\&  package App;
\&  use Moose;
\&
\&  with \*(AqMooseX::Getopt\*(Aq;
\&
\&  has \*(Aqdata\*(Aq => (
\&      metaclass => \*(AqNoGetopt\*(Aq,  # do not attempt to capture this param
\&      is        => \*(Aqro\*(Aq,
\&      isa       => \*(AqStr\*(Aq,
\&      default   => \*(Aqfile.dat\*(Aq,
\&  );
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This is a custom attribute metaclass which can be used to specify
that a specific attribute should \fBnot\fR be processed by
\&\f(CW\*(C`MooseX::Getopt\*(C'\fR. All you need to do is specify the \f(CW\*(C`NoGetopt\*(C'\fR
metaclass.
.PP
.Vb 1
\&  has \*(Aqfoo\*(Aq => (metaclass => \*(AqMooseX::Getopt::Meta::Attribute::NoGetopt\*(Aq, ... );
.Ve
.SS "Use 'traits' instead of 'metaclass'"
.IX Subsection "Use 'traits' instead of 'metaclass'"
You should rarely need to explicitly set the attribute metaclass. It is much
preferred to simply provide a trait (a role applied to the attribute
metaclass), which allows other code to further modify the attribute by applying
additional roles.
.PP
Therefore, you should first try to do this:
.PP
.Vb 1
\&  has \*(Aqfoo\*(Aq => (traits => [\*(AqNoGetopt\*(Aq, ...], ...);
.Ve
.SS "Custom Metaclass alias"
.IX Subsection "Custom Metaclass alias"
This now takes advantage of the Moose 0.19 feature to support
custom attribute metaclass. This means you can also
use this as the \fBNoGetopt\fR alias, like so:
.PP
.Vb 1
\&  has \*(Aqfoo\*(Aq => (metaclass => \*(AqNoGetopt\*(Aq, cmd_flag => \*(Aqf\*(Aq);
.Ve
.SH SUPPORT
.IX Header "SUPPORT"
Bugs may be submitted through the RT bug tracker <https://rt.cpan.org/Public/Dist/Display.html?Name=MooseX-Getopt>
(or bug\-MooseX\-Getopt@rt.cpan.org <mailto:bug-MooseX-Getopt@rt.cpan.org>).
.PP
There is also a mailing list available for users of this distribution, at
<http://lists.perl.org/list/moose.html>.
.PP
There is also an irc channel available for users of this distribution, at
\&\f(CW\*(C`#moose\*(C'\fR on \f(CW\*(C`irc.perl.org\*(C'\fR <irc://irc.perl.org/#moose>.
.SH AUTHOR
.IX Header "AUTHOR"
Stevan Little <stevan@iinteractive.com>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2007 by Infinity Interactive, Inc.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
