.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Config::Any::Base 3pm"
.TH Config::Any::Base 3pm 2023-05-03 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Config::Any::Base \- Base class for loaders
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This is a base class for all loaders. It currently handles the specification
of dependencies in order to ensure the subclass can load the config file
format.
.SH METHODS
.IX Header "METHODS"
.SS "is_supported( )"
.IX Subsection "is_supported( )"
Allows us to determine if the file format can be loaded. The can be done via
one of two subclass methods:
.IP \(bu 4
\&\f(CWrequires_all_of()\fR \- returns an array of items that must all be present in order to work
.IP \(bu 4
\&\f(CWrequires_any_of()\fR \- returns an array of items in which at least one must be present
.PP
You can specify a module version by passing an array reference in the return.
.PP
.Vb 1
\&    sub requires_all_of { [ \*(AqMy::Module\*(Aq, \*(Aq1.1\*(Aq ], \*(AqMy::OtherModule\*(Aq }
.Ve
.PP
Lack of specifying these subs will assume you require no extra modules to function.
.SH AUTHOR
.IX Header "AUTHOR"
Brian Cassidy <bricas@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright 2008\-2009 by Brian Cassidy
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.IP \(bu 4
Config::Any
