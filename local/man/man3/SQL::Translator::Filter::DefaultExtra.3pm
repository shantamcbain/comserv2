.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "SQL::Translator::Filter::DefaultExtra 3pm"
.TH SQL::Translator::Filter::DefaultExtra 3pm 2024-11-18 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
SQL::Translator::Filter::DefaultExtra \- Set default extra data values for schema
objects.
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\&  use SQL::Translator;
\&
\&  my $sqlt = SQL::Translator\->new(
\&      from => \*(AqMySQL\*(Aq,
\&      to   => \*(AqMySQL\*(Aq,
\&      filters => [
\&        DefaultExtra => {
\&            # XXX \- These should really be ordered
\&
\&            # Default widget for fields to basic text edit.
\&            \*(Aqfield.widget\*(Aq => \*(Aqtext\*(Aq,
\&            # idea:
\&            \*(Aqfield(data_type=BIT).widget\*(Aq => \*(Aqyesno\*(Aq,
\&
\&            # Default label (human formated name) for fields and tables
\&            \*(Aqfield.label\*(Aq  => \*(Aq=ucfirst($name)\*(Aq,
\&            \*(Aqtable.label\*(Aq  => \*(Aq=ucfirst($name)\*(Aq,
\&        },
\&      ],
\&  ) || die "SQLFairy error : ".SQL::Translator\->error;
\&  my $sql = $sqlt\->translate || die "SQLFairy error : ".$sqlt\->error;
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
Maybe I'm trying to do too much in one go. Args set a match and then an update,
if you want to set lots of things, use lots of filters!
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\f(CWperl(1)\fR, SQL::Translator
