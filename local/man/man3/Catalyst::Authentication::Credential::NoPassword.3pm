.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Catalyst::Authentication::Credential::NoPassword 3pm"
.TH Catalyst::Authentication::Credential::NoPassword 3pm 2024-10-16 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Catalyst::Authentication::Credential::NoPassword \- Authenticate a user
without a password.
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 3
\&    use Catalyst qw/
\&      Authentication
\&      /;
\&
\&    package MyApp::Controller::Auth;
\&
\&    sub login_as_another_user : Local {
\&        my ($self, $c) = @_;
\&
\&        if ($c\->user_exists() and $c\->user\->username() eq \*(Aqroot\*(Aq) {
\&            $c\->authenticate( {id => c\->req\->params\->{user_id}}, \*(Aqnopassword\*(Aq );
\&        }
\&    }
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This authentication credential checker takes authentication information 
(most often a username) and retrieves the user from the store. No validation
of any credentials is done. This is intended for administrative backdoors,
SAML logins and so on when you have identified the new user by other means.
.SH CONFIGURATION
.IX Header "CONFIGURATION"
.Vb 10
\&    # example
\&    <Plugin::Authentication>
\&        <nopassword>
\&            <credential>
\&                class = NoPassword
\&            </credential>
\&            <store>
\&                class = DBIx::Class
\&                user_model = DB::User
\&                role_relation = roles
\&                role_field = name
\&            </store>
\&        </nopassword>
\&    </Plugin::Authentication>
.Ve
.SH METHODS
.IX Header "METHODS"
.ie n .SS "authenticate ( $c, $realm, $authinfo )"
.el .SS "authenticate ( \f(CW$c\fP, \f(CW$realm\fP, \f(CW$authinfo\fP )"
.IX Subsection "authenticate ( $c, $realm, $authinfo )"
Try to log a user in.
