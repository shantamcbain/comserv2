.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "SQL::Translator::Parser::PostgreSQL 3pm"
.TH SQL::Translator::Parser::PostgreSQL 3pm 2024-11-18 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
SQL::Translator::Parser::PostgreSQL \- parser for PostgreSQL
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 2
\&  use SQL::Translator;
\&  use SQL::Translator::Parser::PostgreSQL;
\&
\&  my $translator = SQL::Translator\->new;
\&  $translator\->parser("SQL::Translator::Parser::PostgreSQL");
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
The grammar was started from the MySQL parsers.  Here is the description
from PostgreSQL, truncated to what's currently supported (patches welcome, of course) :
.PP
Table:
(http://www.postgresql.org/docs/current/sql\-createtable.html)
.PP
.Vb 7
\&  CREATE [ [ LOCAL ] { TEMPORARY | TEMP } ] TABLE table_name (
\&      { column_name data_type [ DEFAULT default_expr ]
\&         [ column_constraint [, ... ] ]
\&      | table_constraint }  [, ... ]
\&  )
\&  [ INHERITS ( parent_table [, ... ] ) ]
\&  [ WITH OIDS | WITHOUT OIDS ]
\&
\&  where column_constraint is:
\&
\&  [ CONSTRAINT constraint_name ]
\&  { NOT NULL | NULL | UNIQUE | PRIMARY KEY |
\&    CHECK (expression) |
\&    REFERENCES reftable [ ( refcolumn ) ] [ MATCH FULL | MATCH PARTIAL ]
\&      [ ON DELETE action ] [ ON UPDATE action ] }
\&  [ DEFERRABLE | NOT DEFERRABLE ] [ INITIALLY DEFERRED | INITIALLY IMMEDIATE ]
\&
\&  and table_constraint is:
\&
\&  [ CONSTRAINT constraint_name ]
\&  { UNIQUE ( column_name [, ... ] ) |
\&    PRIMARY KEY ( column_name [, ... ] ) |
\&    CHECK ( expression ) |
\&    EXCLUDE [USING acc_method] (expression) [INCLUDE (column [, ...])] [WHERE (predicate)]
\&    FOREIGN KEY ( column_name [, ... ] )
\&     REFERENCES reftable [ ( refcolumn [, ... ] ) ]
\&      [ MATCH FULL | MATCH PARTIAL ] [ ON DELETE action ] [ ON UPDATE action ] }
\&  [ DEFERRABLE | NOT DEFERRABLE ] [ INITIALLY DEFERRED | INITIALLY IMMEDIATE ]
.Ve
.PP
Index :
(http://www.postgresql.org/docs/current/sql\-createindex.html)
.PP
.Vb 7
\&  CREATE [ UNIQUE ] INDEX index_name ON table
\&      [ USING acc_method ] ( column [ ops_name ] [, ...] )
\&      [ INCLUDE  ( column [, ...] ) ]
\&      [ WHERE predicate ]
\&  CREATE [ UNIQUE ] INDEX index_name ON table
\&      [ USING acc_method ] ( func_name( column [, ... ]) [ ops_name ] )
\&      [ WHERE predicate ]
.Ve
.PP
Alter table:
.PP
.Vb 10
\&  ALTER TABLE [ ONLY ] table [ * ]
\&      ADD [ COLUMN ] column type [ column_constraint [ ... ] ]
\&  ALTER TABLE [ ONLY ] table [ * ]
\&      ALTER [ COLUMN ] column { SET DEFAULT value | DROP DEFAULT }
\&  ALTER TABLE [ ONLY ] table [ * ]
\&      ALTER [ COLUMN ] column SET STATISTICS integer
\&  ALTER TABLE [ ONLY ] table [ * ]
\&      RENAME [ COLUMN ] column TO newcolumn
\&  ALTER TABLE table
\&      RENAME TO new_table
\&  ALTER TABLE table
\&      ADD table_constraint_definition
\&  ALTER TABLE [ ONLY ] table
\&          DROP CONSTRAINT constraint { RESTRICT | CASCADE }
\&  ALTER TABLE table
\&          OWNER TO new_owner
.Ve
.PP
View :
.PP
.Vb 1
\&    CREATE [ OR REPLACE ] VIEW view [ ( column name list ) ] AS SELECT query
.Ve
.SH AUTHORS
.IX Header "AUTHORS"
Ken Y. Clark <kclark@cpan.org>,
Allen Day <allenday@ucla.edu>.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBperl\fR\|(1), Parse::RecDescent.
