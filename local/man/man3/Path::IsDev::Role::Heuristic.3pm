.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Path::IsDev::Role::Heuristic 3pm"
.TH Path::IsDev::Role::Heuristic 3pm 2017-03-09 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Path::IsDev::Role::Heuristic \- Base role for Heuristic things.
.SH VERSION
.IX Header "VERSION"
version 1.001003
.SH "ROLE REQUIRES"
.IX Header "ROLE REQUIRES"
.ie n .SS """matches"""
.el .SS \f(CWmatches\fP
.IX Subsection "matches"
Implementing classes must provide this method.
.PP
.Vb 3
\&    return : 1 / undef
\&             1     \-> this path is a development directory as far as this heuristic is concerned
\&             undef \-> this path is not a development directory as far as this heuristic is concerned
\&
\&    args : ( $class , $result_object )
\&        $class         \-> method will be invoked on packages, not objects
\&        $result_object \-> will be a Path::IsDev::Result
.Ve
.PP
Additionally, consuming classes \fBshould\fR set \f(CW\*(C`$result_object\->result( 1 )\*(C'\fR prior to returning true.
.PP
Composing roles \fBshould\fR also invoke \f(CW\*(C`$result_object\->add_reason( $self, $result_value, $descriptive_reason_for_result, \e%contextinfo )\*(C'\fR.
.PP
See \f(CW\*(C`Path::IsDev::Result\*(C'\fR for details
.SH METHODS
.IX Header "METHODS"
.ie n .SS """name"""
.el .SS \f(CWname\fP
.IX Subsection "name"
Returns the name to use in debugging.
.PP
By default, this is derived from the classes name
with the \f(CW\*(C`PIDH\*(C'\fR prefix removed:
.PP
.Vb 2
\&    Path::IsDev::Heuristic::Tool::Dzil\->name()
\&    â†’ "+ ::Tool::Dzil"
.Ve
.ie n .SS """heuristic_type"""
.el .SS \f(CWheuristic_type\fP
.IX Subsection "heuristic_type"
Returns a description of the general heuristic type
.PP
.Vb 1
\&    positive heuristic
.Ve
.SH AUTHOR
.IX Header "AUTHOR"
Kent Fredric <kentnl@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2017 by Kent Fredric <kentfredric@gmail.com>.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
