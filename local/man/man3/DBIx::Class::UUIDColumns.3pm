.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "DBIx::Class::UUIDColumns 3pm"
.TH DBIx::Class::UUIDColumns 3pm 2011-12-21 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
DBIx::Class::UUIDColumns \- Implicit uuid columns
.SH SYNOPSIS
.IX Header "SYNOPSIS"
In your DBIx::Class table class:
.PP
.Vb 2
\&  _\|_PACKAGE_\|_\->load_components(qw/UUIDColumns ... Core/);
\&  _\|_PACKAGE_\|_\->uuid_columns(\*(Aqartist_id\*(Aq);
.Ve
.PP
\&\fBNote:\fR The component needs to be loaded \fIbefore\fR Core.
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This DBIx::Class component resembles the behaviour of Class::DBI::UUID,
to make some columns implicitly created as uuid.
.PP
When loaded, \f(CW\*(C`UUIDColumns\*(C'\fR will search for a suitable uuid generation module
from the following list of supported modules:
.PP
.Vb 5
\&  Data::UUID
\&  APR::UUID*
\&  UUID
\&  Win32::Guidgen
\&  Win32API::GUID
.Ve
.PP
If no supporting module can be found, an exception will be thrown.
.PP
*APR::UUID will not be loaded under OpenBSD due to an as yet unidentified XS
issue.
.PP
If you would like to use a specific module, you can set "uuid_class":
.PP
.Vb 2
\&  _\|_PACKAGE_\|_\->uuid_class(\*(Aq::Data::UUID\*(Aq);
\&  _\|_PACKAGE_\|_\->uuid_class(\*(AqMyUUIDGenerator\*(Aq);
.Ve
.SH METHODS
.IX Header "METHODS"
.SS get_uuid
.IX Subsection "get_uuid"
Returns a uuid string from the current uuid_maker.
.SS insert
.IX Subsection "insert"
Inserts a new uuid string into each column in "uuid_columns".
.SS uuid_columns
.IX Subsection "uuid_columns"
Gets/sets the list of columns to be filled with uuids during insert.
.PP
.Vb 1
\&  _\|_PACKAGE_\|_\->uuid_columns(\*(Aqartist_id\*(Aq);
.Ve
.SS uuid_class
.IX Subsection "uuid_class"
Takes the name of a UUIDMaker subclass to be used for uuid value generation.
This can be a fully qualified class name, or a shortcut name starting with ::
that matches one of the available DBIx::Class::UUIDColumns::UUIDMaker subclasses:
.PP
.Vb 2
\&  _\|_PACKAGE_\|_\->uuid_class(\*(AqCustomUUIDGenerator\*(Aq);
\&  # loads CustomeUUIDGenerator
\&
\&  _\|_PACKAGE_\|_\->uuid_class(\*(Aq::Data::UUID\*(Aq);
\&  # loads DBIx::Class::UUIDMaker::Data::UUID;
.Ve
.PP
Note that \f(CW\*(C`uuid_class\*(C'\fR checks to see that the specified class isa
DBIx::Class::UUIDColumns::UUIDMaker subclass and throws and exception if it isn't.
.SS uuid_maker
.IX Subsection "uuid_maker"
Returns the current UUIDMaker instance for the given module.
.PP
.Vb 1
\&  my $uuid = _\|_PACKAGE_\|_\->uuid_maker\->as_string;
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
DBIx::Class::UUIDColumns::UUIDMaker
.SH AUTHOR
.IX Header "AUTHOR"
Chia-liang Kao <clkao@clkao.org>
.SH CONTRIBUTERS
.IX Header "CONTRIBUTERS"
Chris Laco <claco@chrislaco.com>
.SH LICENSE
.IX Header "LICENSE"
You may distribute this code under the same terms as Perl itself.
