.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Number::Tolerant::Type 3pm"
.TH Number::Tolerant::Type 3pm 2022-12-31 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Number::Tolerant::Type \- a type of tolerance
.SH VERSION
.IX Header "VERSION"
version 1.710
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.SH "PERL VERSION"
.IX Header "PERL VERSION"
This library should run on perls released even a long time ago.  It should work
on any version of perl released in the last five years.
.PP
Although it may work on older versions of perl, no guarantee is made that the
minimum required version will not be increased.  The version may be increased
for any reason, and there is no promise that patches will be accepted to lower
the minimum required perl.
.SH METHODS
.IX Header "METHODS"
.SS valid_args
.IX Subsection "valid_args"
.Vb 1
\&  my @args = $type_class\->valid_args(@_);
.Ve
.PP
If the arguments to \f(CW\*(C`valid_args\*(C'\fR are valid arguments for this type of
tolerance, this method returns their canonical form, suitable for passing to
\&\f(CW"construct"\fR.  Otherwise this method returns false.
.SS construct
.IX Subsection "construct"
.Vb 1
\&  my $object_guts = $type_class\->construct(@args);
.Ve
.PP
This method is passed the output of the \f(CW"valid_args"\fR method, and should
return a hashref that will become the guts of a new tolerance.
.SS parse
.IX Subsection "parse"
.Vb 1
\&  my $tolerance = $type_class\->parse($string);
.Ve
.PP
This method returns a new, fully constructed tolerance from the given string
if the given string can be parsed into a tolerance of this type.
.SS number_re
.IX Subsection "number_re"
.Vb 1
\&  my $number_re = $type_class\->number_re;
.Ve
.PP
This method returns the regular expression (as a \f(CW\*(C`qx\*(C'\fR construct) used to match
number in parsed strings.
.SS normalize_number
.IX Subsection "normalize_number"
.Vb 1
\&  my $number = $type_class\->normalize_number($input);
.Ve
.PP
This method will decide whether the given input is a valid number for use with
Number::Tolerant and return it in a canonicalized form.  Math::BigInt objects
are returned intact.  Strings holding numbers are also returned intact.
Strings that appears to be fractions are converted to Math::BigRat objects.
.PP
Anything else is considered invalid, and the method will return false.
.SS variable_re
.IX Subsection "variable_re"
.Vb 1
\&  my $variable_re = $type_class\->variable_re;
.Ve
.PP
This method returns the regular expression (as a \f(CW\*(C`qr\*(C'\fR construct) used to match
the variable in parsed strings.
.PP
When parsing "4 <= x <= 10" this regular expression is used to match the letter
"x."
.SH AUTHOR
.IX Header "AUTHOR"
Ricardo Signes <cpan@semiotic.systems>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2004 by Ricardo Signes.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
