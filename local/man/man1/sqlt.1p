.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "SQLT 1p"
.TH SQLT 1p 2024-11-18 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
sqlt \- convert SQL schema using SQL::Translator
.SH SYNOPSIS
.IX Header "SYNOPSIS"
For help:
.PP
.Vb 1
\&  sqlt \-h|\-\-help
.Ve
.PP
For a list of all parsers and producers:
.PP
.Vb 1
\&  sqlt \-l|\-\-list
.Ve
.PP
To translate a schema:
.PP
.Vb 4
\&  sqlt \-f|\-\-from|\-\-parser MySQL
\&       \-t|\-\-to|\-\-producer Oracle
\&       [options]
\&       file [file2 ...]
\&
\&  General Options:
\&
\&    \-d|\-\-debug         Print debug info
\&    \-v|\-\-validate      Validate the schema
\&    \-\-version          Show the version of SQL::Translator
\&    \-\-trace            Print parser trace info
\&    \-\-show\-warnings    Print warnings to STDERR
\&
\&  General Parser Options:
\&
\&    \-\-skip             Comma\-separated list of tables to skip (only implemented in some parsers)
\&    \-\-ignore_opts      Comma\-separated list of table options to ignore
\&
\&  DBI Parser Options:
\&
\&    \-\-dsn              DSN for connecting to database
\&                       (see also \-\-use\-same\-auth below)
\&    \-\-db\-user          Database user
\&    \-\-db\-password      Database password
\&
\&  xSV Parser Options:
\&
\&    \-\-fs               The field separator
\&    \-\-rs               The record separator
\&    \-\-no\-trim          Don\*(Aqt trim whitespace on fields
\&    \-\-no\-scan          Don\*(Aqt scan fields for data types and sizes
\&
\&  MySQL Parser Options:
\&
\&    \-\-mysql\-parser\-version  Target MySQL parser version for dealing with
\&                              /*! comments; default = 30000
\&
\&  MySQL Producer Options:
\&
\&    \-\-mysql\-version  MySQL server version
\&
\&  General Producer Options
\&
\&    \-\-producer\-db\-user   Database user for producer
\&    \-\-producer\-db\-pass   Database password for producer
\&    \-\-producer\-dsn       DSN for producer
\&    \-\-use\-same\-auth      Use these DSN, user, password for producer output
\&
\&  DB Producer Options:
\&
\&    \-\-add\-drop\-table   Add \*(AqDROP TABLE\*(Aq statements before creates
\&    \-\-quote\-table\-names  Quote all table names in statements
\&    \-\-quote\-field\-names  Quote all field names in statements
\&    \-\-no\-comments      Don\*(Aqt include comments in SQL output
\&
\&  PostgreSQL Producer Options:
\&
\&    \-\-postgres\-version   PostgreSQL server version
\&
\&  Diagram Producer Options:
\&
\&    \-\-imap\-file        Filename to put image map data
\&    \-\-imap\-url         URL to use for image map
\&
\&  Dumper Producer Options:
\&
\&    \-\-skip             Comma\-separated list of tables to skip
\&    \-\-skiplike         Regex for tables to skip
\&    \-\-add\-truncate     Add "TRUNCATE TABLE" statements for each table
\&
\&  HTML/POD Producer Options:
\&
\&    \-\-pretty           Use CGI::Pretty for the output
\&    \-\-title            Title of schema
\&
\&  TTSchema Producer Options:
\&
\&    \-\-template             The path to the template
\&    \-\-tt\-var var=value     Pass extra variables to the template
\&    \-\-tt\-conf option=value Pass extra config options to Template
\&
\&  XML\-SQLFairy Producer Options:
\&
\&    \-\-add\-prefix       Use an explicit namespace prefix of \*(Aqsqlf:\*(Aq
\&    \-\-prefix=<p>       Use the namespace prefix given as argument.
\&    \-\-no\-newlines      Write the XML as a single line.
\&    \-\-indent=<n>       Use <n> characters of whitespace to indent the XML.
\&
\&  ClassDBI Producer Options:
\&
\&    \-\-package          Base package name for Class::DBI modules.
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This script is part of the SQL Fairy project.  It will try to convert
any source file for which it has a grammar into any format for which
it has a producer.
.PP
If using "show-warnings," be sure to redirect STDERR to a separate file.
In bash, you could do this:
.PP
.Vb 2
\&    $ sql_translator.pl \-f MySQL \-t PostgreSQL \-\-show\-warnings \e
\&       file.sql 1>out 2>err
.Ve
.PP
You can specify a parser or producer located in any module that Perl
knows about, allowing you to easily substitute your own.
.SH AUTHOR
.IX Header "AUTHOR"
Ken Youens-Clark <kclark@cpan.org>,
darren chamberlain <darren@cpan.org>.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
SQL::Translator, <http://sqlfairy.sourceforge.net>.
