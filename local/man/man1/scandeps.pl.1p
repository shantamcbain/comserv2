.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "SCANDEPS 1p"
.TH SCANDEPS 1p 2022-11-18 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
scandeps.pl \- Scan file prerequisites
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 6
\&    % scandeps.pl *.pm          # Print PREREQ_PM section for *.pm
\&    % scandeps.pl \-e \*(AqSTRING\*(Aq   # Scan an one\-liner
\&    % scandeps.pl \-B *.pm       # Include core modules
\&    % scandeps.pl \-V *.pm       # Show autoload/shared/data files
\&    % scandeps.pl \-R *.pm       # Don\*(Aqt recurse
\&    % scandeps.pl \-C CACHEFILE  # use CACHEFILE to cache dependencies
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
\&\fIscandeps.pl\fR is a simple-minded utility that prints out the
\&\f(CW\*(C`PREREQ_PM\*(C'\fR section needed by modules.
.PP
If the option \f(CW\*(C`\-T\*(C'\fR is specified and
you have \fBCPANPLUS\fR installed, modules that are part of an
earlier module's distribution with be denoted with \f(CW\*(C`S\*(C'\fR; modules
without a distribution name on CPAN are marked with \f(CW\*(C`?\*(C'\fR.
.PP
Also, if the \f(CW\*(C`\-B\*(C'\fR option is specified, module belongs to a perl
distribution on CPAN (and thus uninstallable by \f(CW\*(C`CPAN.pm\*(C'\fR or
\&\f(CW\*(C`CPANPLUS.pm\*(C'\fR) are marked with \f(CW\*(C`C\*(C'\fR.
.PP
Finally, modules that has loadable shared object files (usually
needing a compiler to install) are marked with \f(CW\*(C`X\*(C'\fR; with the
\&\f(CW\*(C`\-V\*(C'\fR flag, those files (and all other files found) will be listed
before the main output. Additionally, all module files that the
scanned code depends on but were not found (and thus not scanned
recursively) are listed. These may include genuinely missing
modules or false positives. That means, modules your code does
not depend on (on this particular platform) but that were picked
up by the heuristic anyway.
.SH OPTIONS
.IX Header "OPTIONS"
.IP "\fB\-e\fR, \fB\-\-eval\fR=\fISTRING\fR" 4
.IX Item "-e, --eval=STRING"
Scan \fISTRING\fR as a string containing perl code.
.IP "\fB\-c\fR, \fB\-\-compile\fR" 4
.IX Item "-c, --compile"
Compiles the code and inspects its \f(CW%INC\fR, in addition to static scanning.
.IP "\fB\-x\fR, \fB\-\-execute\fR" 4
.IX Item "-x, --execute"
Executes the code and inspects its \f(CW%INC\fR, in addition to static scanning.
You may use \fB\-\-xargs\fR to specify \f(CW@ARGV\fR when executing the code.
.IP \fB\-\-xargs\fR=\fISTRING\fR 4
.IX Item "--xargs=STRING"
If \fB\-x\fR is given, splits the \f(CW\*(C`STRING\*(C'\fR using the function
\&\f(CW\*(C`shellwords\*(C'\fR from Text::ParseWords and passes the result
as \f(CW@ARGV\fR when executing the code.
.IP "\fB\-B\fR, \fB\-\-bundle\fR" 4
.IX Item "-B, --bundle"
Include core modules in the output and the recursive search list.
.IP "\fB\-R\fR, \fB\-\-no\-recurse\fR" 4
.IX Item "-R, --no-recurse"
Only show dependencies found in the files listed and do not recurse.
.IP "\fB\-V\fR, \fB\-\-verbose\fR" 4
.IX Item "-V, --verbose"
Verbose mode: Output all files found during the process;
show dependencies between modules and availability.
.Sp
Additionally, warns of any missing dependencies. If you find missing
dependencies that aren't really dependencies, you have probably found
false positives.
.IP "\fB\-C\fR, \fB\-\-cachedeps\fR=\fICACHEFILE\fR" 4
.IX Item "-C, --cachedeps=CACHEFILE"
Use CACHEFILE to speed up the scanning process by caching dependencies.
Creates CACHEFILE if it does not exist yet.
.IP "\fB\-T\fR, \fB\-\-modtree\fR" 4
.IX Item "-T, --modtree"
Retrieves module information from CPAN if you have \fBCPANPLUS\fR installed.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Module::ScanDeps, CPANPLUS::Backend, PAR
.SH ACKNOWLEDGMENTS
.IX Header "ACKNOWLEDGMENTS"
Simon Cozens, for suggesting this script to be written.
.SH AUTHORS
.IX Header "AUTHORS"
Audrey Tang <autrijus@autrijus.org>
.SH COPYRIGHT
.IX Header "COPYRIGHT"
Copyright 2003, 2004, 2005, 2006 by Audrey Tang <autrijus@autrijus.org>.
.PP
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
.PP
See <http://www.perl.com/perl/misc/Artistic.html>
