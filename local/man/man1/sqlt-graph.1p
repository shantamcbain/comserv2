.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "SQLT-GRAPH 1p"
.TH SQLT-GRAPH 1p 2024-11-18 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
sqlt\-graph \- Automatically create a graph from a database schema
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\&  ./sqlt\-graph \-d|\-\-db|\-f|\-\-from=db_parser [options] schema.sql
\&
\&  Options:
\&
\&    \-l|\-\-layout        Layout schema for GraphViz
\&                       ("dot," "neato," "twopi"; default "dot")
\&    \-n|\-\-node\-shape    Shape of the nodes ("record," "plaintext,"
\&                       "ellipse," "circle," "egg," "triangle," "box,"
\&                       "diamond," "trapezium," "parallelogram," "house,"
\&                       "hexagon," "octagon," default "record")
\&    \-o|\-\-output        Output file name (default STDOUT)
\&    \-t|\-\-output\-type   Output file type ("canon", "text," "ps," "hpgl,"
\&                       "pcl," "mif," "pic," "gd," "gd2," "gif," "jpeg,"
\&                       "png," "wbmp," "cmap," "ismap," "imap," "vrml,"
\&                       "vtx," "mp," "fig," "svg," "plain," default "png")
\&    \-c|\-\-color         Add colors
\&    \-\-cluster          Cluster tables
\&    \-\-no\-fields        Don\*(Aqt show field names
\&    \-\-height           Image height (in inches, default "11",
\&                       set to "0" to undefine)
\&    \-\-width            Image width (in inches, default "8.5",
\&                       set to "0" to undefine)
\&    \-\-fontsize         custom font size for node and edge labels
\&    \-\-fontname         name of custom font (or full path to font file) for
\&                       node, edge, and graph labels
\&    \-\-nodeattr         attribute name and value (in key=val syntax) for
\&                       nodes; this option may be repeated to specify
\&                       multiple node attributes
\&    \-\-edgeattr         same as \-\-nodeattr, but for edge attributes
\&    \-\-graphattr        same as \-\-nodeattr, but for graph attributes
\&    \-\-natural\-join     Perform natural joins
\&    \-\-natural\-join\-pk  Perform natural joins from primary keys only
\&    \-\-show\-datatypes   Show datatype of each field
\&    \-\-show\-sizes       Show column sizes for VARCHAR and CHAR fields
\&    \-\-show\-constraints Show list of constraints for each field
\&    \-s|\-\-skip          Fields to skip in natural joins
\&    \-\-skip\-tables      Comma\-separated list of table names to exclude
\&    \-\-skip\-tables\-like Comma\-separated list of regexen to exclude tables
\&    \-\-debug            Print debugging information
\&    \-\-trace            Print parser trace info
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This script will create a graph of your schema.  Only the database
driver argument (for SQL::Translator) is required.  If no output file
name is given, then image will be printed to STDOUT, so you should
redirect the output into a file.
.PP
The default action is to assume the presence of foreign key
relationships defined via "REFERNCES" or "FOREIGN KEY" constraints on
the tables.  If you are parsing the schema of a file that does not
have these, you will find the natural join options helpful.  With
natural joins, like-named fields will be considered foreign keys.
This can prove too permissive, however, as you probably don't want a
field called "name" to be considered a foreign key, so you could
include it in the "skip" option, and all fields called "name" will be
excluded from natural joins.  A more efficient method, however, might
be to simply deduce the foreign keys from primary keys to other fields
named the same in other tables.  Use the "natural-join-pk" option
to achieve this.
.PP
If the schema defines foreign keys, then the graph produced will be
directed showing the direction of the relationship.  If the foreign
keys are intuited via natural joins, the graph will be undirected.
.PP
Clustering of tables allows you to group and box tables according to
function or domain or whatever criteria you choose.  The syntax for
clustering tables is:
.PP
.Vb 1
\&  cluster1=table1,table2;cluster2=table3,table4
.Ve
.SH AUTHOR
.IX Header "AUTHOR"
Ken Youens-Clark <kclark@cpan.org>.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
perl, SQL::Translator.
